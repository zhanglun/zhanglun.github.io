{"version":3,"file":"component---src-pages-categories-tsx.js","mappings":"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","sources":["webpack://zhanglun.github.io/./src/pages/categories.tsx","webpack://zhanglun.github.io/./src/components/Header/index.tsx","webpack://zhanglun.github.io/./src/components/Banner/index.tsx","webpack://zhanglun.github.io/./src/components/Footer/index.tsx","webpack://zhanglun.github.io/./src/components/layout.js","webpack://zhanglun.github.io/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n// @ts-ignore\nimport A from '../images/a.png';\n\nconst CategoryPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const categoryGroup = data.allMarkdownRemark.group\n  const siteMenu = data.site.siteMetadata?.menu || []\n  const description = data.site.siteMetadata?.description || \"\"\n\n  if (categoryGroup.length === 0) {\n    return (\n      <Layout\n        location={location}\n        title={siteTitle}\n        menu={siteMenu}\n        description={description}\n      >\n        <Seo title=\"All posts\" />\n        <p>\n          No category found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      menu={siteMenu}\n      description={description}\n    >\n      <Seo title=\"All posts\" />\n      <div className=\"page-title\">分类</div>\n      <div className=\"category-list\">\n        {categoryGroup.map(category => {\n          return (\n            <Link\n              to={`/categories/${category.fieldValue}`}\n              key={category.fieldValue}\n              className=\"category-item\"\n            >\n              {/* <div className=\"category-img\">\n                <img src={A} alt=\"\" />\n              </div> */}\n              <div># {category.fieldValue}</div>\n              <div>{category.totalCount}</div>\n            </Link>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default CategoryPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        menu {\n          id\n          name\n          url\n        }\n      }\n    }\n    allMarkdownRemark {\n      group(field: frontmatter___categories) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./index.css\"\n\nexport const Header = props => {\n  const { title, menu = [] } = props\n\n  const renderMenu = () => {\n    return menu.map(item => {\n      return (\n        <Link className=\"nav-item\" to={item.url} key={item.id}>\n          {item.name}\n        </Link>\n      )\n    })\n  }\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-inner\">\n        <div className=\"header-title\">\n          <Link className=\"header-title-link\" to={\"/\"}>{title}</Link>\n        </div>\n        <nav className=\"header-nav\">{renderMenu()}</nav>\n      </div>\n    </header>\n  )\n}\n","import React from \"react\"\nimport \"./index.css\"\n\nexport const Banner = ({ description }) => {\n  return (\n    <div className=\"banner\">\n      <div className=\"banner-title\">{description}</div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./index.css\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      © {new Date().getFullYear()}, Built with\n      {` `}\n      <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n    </footer>\n  )\n}\n","import * as React from \"react\"\nimport { Header } from \"./Header\"\nimport { Banner } from \"./Banner\"\nimport { Footer } from './Footer';\n\nconst Layout = ({ location, children, title, menu, description }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  \n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Header\n        title={title}\n        menu={menu}\n      />\n      <Banner description={description} />\n      <section className=\"main\">{children}</section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","CategoryPage","data","location","siteTitle","site","siteMetadata","title","categoryGroup","allMarkdownRemark","group","siteMenu","menu","description","length","map","category","fieldValue","totalCount","pageQuery","Header","props","renderMenu","item","url","id","name","Banner","Footer","Date","getFullYear","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","PropTypes","Helmet","useStaticQuery","lang","meta","metaDescription","defaultTitle","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"sourceRoot":""}