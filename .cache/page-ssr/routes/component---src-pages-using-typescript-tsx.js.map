{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAaA,KAAMI,CAAAA,eAA+C,CAAG,CAAC,CACvDC,IADuD,CAEvDC,IAFuD,CAGvDC,QAHuD,CAAD,gBAKtD,iDAAC,mEAAD,EAAQ,KAAK,CAAC,kBAAd,CAAiC,QAAQ,CAAEA,QAA3C,eACE,iDAAC,gEAAD,EAAK,KAAK,CAAC,kBAAX,EADF,cAEE,oGAFF,cAGE,mHAC2C,sEAD3C,6EAE8C,yEAF9C,wEAHF,cAQE,mHAC2C,wEAD3C,kCAEM,wEAFN,8BAEsC,sEAFtC,UARF,cAYE,4FACiCD,IADjC,yBAC2D,GAD3D,CAEGD,IAAI,CAACG,IAAL,CAAUC,SAFb,KAZF,cAgBE,4FACkC,GADlC,cAEE,sDAAG,IAAI,CAAC,2CAAR,mCAFF,KAhBF,cAuBE,iDAAC,wCAAD,EAAM,EAAE,CAAC,GAAT,4BAvBF,CALF,CAgCA,iEAAeL,eAAf,EAEO,KAAMM,CAAAA,KAAK,aAAX;;;;;;;;;;;;;;;;;;;AC3CA,KAAMC,CAAAA,MAAM,CAAGC,KAAK,EAAI,CAC7B,KAAM,CAAEC,KAAF,CAASC,IAAI,CAAG,EAAhB,EAAuBF,KAA7B,CAEA,KAAMG,CAAAA,UAAU,CAAG,IAAM,CACvB,MAAOD,CAAAA,IAAI,CAACE,GAAL,CAASC,IAAI,EAAI,CACtB,mBACE,iCAAC,yBAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,EAAE,CAAEA,IAAI,CAACC,GAApC,CAAyC,GAAG,CAAED,IAAI,CAACE,EAAnD,EACGF,IAAI,CAACG,IADR,CADF,CAKD,CANM,CAAP,CAOD,CARD,CAUA,mBACE,2CAAQ,SAAS,CAAC,QAAlB,eACE,wCAAK,SAAS,CAAC,cAAf,eACE,wCAAK,SAAS,CAAC,cAAf,eACE,iCAAC,yBAAD,EAAM,SAAS,CAAC,mBAAhB,CAAoC,EAAE,CAAE,GAAxC,EAA8CP,KAA9C,CADF,CADF,cAIE,wCAAK,SAAS,CAAC,YAAf,EAA6BE,UAAU,EAAvC,CAJF,CADF,CADF,CAUD,CAvBM;;ACDA,KAAMM,CAAAA,MAAM,CAAG,CAAC,CAAEC,WAAF,CAAD,GAAqB,CACzC,mBACE,wCAAK,SAAS,CAAC,QAAf,eACE,wCAAK,SAAS,CAAC,cAAf,EAA+BA,WAA/B,CADF,CADF,CAKD,CANM;;ACAA,KAAMC,CAAAA,MAAM,CAAG,IAAM,CAC1B,mBACE,2CAAQ,SAAS,CAAC,QAAlB,UACK,GAAIC,CAAAA,IAAJ,GAAWC,WAAX,EADL,gBAEI,GAFJ,cAGE,sCAAG,IAAI,CAAC,0BAAR,WAHF,CADF,CAOD,CARM;;ACEP,KAAMvB,CAAAA,MAAM,CAAG,CAAC,CAAEK,QAAF,CAAYmB,QAAZ,CAAsBb,KAAtB,CAA6BC,IAA7B,CAAmCQ,WAAnC,CAAD,GAAsD,CACnE,KAAMK,CAAAA,QAAQ,CAAI,GAAEC,EAAgB,GAApC,CACA,KAAMC,CAAAA,UAAU,CAAGtB,QAAQ,CAACuB,QAAT,GAAsBH,QAAzC,CAEA,mBACE,+BAAK,SAAS,CAAC,gBAAf,CAAgC,oBAAmBE,UAAnD,eACE,wBAAC,MAAD,EACE,KAAK,CAAEhB,KADT,CAEE,IAAI,CAAEC,IAFR,EADF,cAKE,wBAAC,MAAD,EAAQ,WAAW,CAAEQ,WAArB,EALF,cAME,mCAAS,SAAS,CAAC,MAAnB,EAA2BI,QAA3B,CANF,cAOE,wBAAC,MAAD,MAPF,CADF,CAWD,CAfD,CAiBA,6CAAexB,MAAf;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA,GAOA,KAAMC,CAAAA,GAAG,CAAG,CAAC,CAAEmB,WAAF,CAAeY,IAAf,CAAqBC,IAArB,CAA2BtB,KAA3B,CAAD,GAAwC,kEAClD,KAAM,CAAEL,IAAF,EAAWyB,sDAAc,cAA/B,CAgBA,KAAMG,CAAAA,eAAe,CAAGd,WAAW,EAAId,IAAI,CAAC6B,YAAL,CAAkBf,WAAzD,CACA,KAAMgB,CAAAA,YAAY,qBAAG9B,IAAI,CAAC6B,YAAR,6CAAG,mBAAmBxB,KAAxC,CAEA,mBACE,iDAAC,gDAAD,EACE,cAAc,CAAE,CACdqB,IADc,CADlB,CAIE,KAAK,CAAErB,KAJT,CAKE,aAAa,CAAEyB,YAAY,CAAI,QAAOA,YAAa,EAAxB,CAA4B,IALzD,CAME,IAAI,CAAE,CACJ,CACElB,IAAI,CAAG,aADT,CAEEmB,OAAO,CAAEH,eAFX,CADI,CAKJ,CACEI,QAAQ,CAAG,UADb,CAEED,OAAO,CAAE1B,KAFX,CALI,CASJ,CACE2B,QAAQ,CAAG,gBADb,CAEED,OAAO,CAAEH,eAFX,CATI,CAaJ,CACEI,QAAQ,CAAG,SADb,CAEED,OAAO,CAAG,SAFZ,CAbI,CAiBJ,CACEnB,IAAI,CAAG,cADT,CAEEmB,OAAO,CAAG,SAFZ,CAjBI,CAqBJ,CACEnB,IAAI,CAAG,iBADT,CAEEmB,OAAO,CAAE,sBAAA/B,IAAI,CAAC6B,YAAL,yFAAmBI,MAAnB,sEAA2BC,OAA3B,GAAuC,EAFlD,CArBI,CAyBJ,CACEtB,IAAI,CAAG,eADT,CAEEmB,OAAO,CAAE1B,KAFX,CAzBI,CA6BJ,CACEO,IAAI,CAAG,qBADT,CAEEmB,OAAO,CAAEH,eAFX,CA7BI,EAiCJO,MAjCI,CAiCGR,IAjCH,CANR,EADF,CA2CD,CA/DD,CAiEAhC,GAAG,CAACyC,YAAJ,CAAmB,CACjBV,IAAI,CAAG,IADU,CAEjBC,IAAI,CAAE,EAFW,CAGjBb,WAAW,CAAG,EAHG,CAAnB,CAMAnB,GAAG,CAAC0C,SAAJ,CAAgB,CACdvB,WAAW,CAAES,0DADC,CAEdG,IAAI,CAAEH,0DAFQ,CAGdI,IAAI,CAAEJ,yDAAA,CAAkBA,0DAAlB,CAHQ,CAIdlB,KAAK,CAAEkB,qEAJO,CAAhB,CAOA,iEAAe5B,GAAf","sources":["webpack://zhanglun.github.io/./src/pages/using-typescript.tsx","webpack://zhanglun.github.io/./src/components/Header/index.tsx","webpack://zhanglun.github.io/./src/components/Banner/index.tsx","webpack://zhanglun.github.io/./src/components/Footer/index.tsx","webpack://zhanglun.github.io/./src/components/layout.js","webpack://zhanglun.github.io/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./index.css\"\n\nexport const Header = props => {\n  const { title, menu = [] } = props\n\n  const renderMenu = () => {\n    return menu.map(item => {\n      return (\n        <Link className=\"nav-item\" to={item.url} key={item.id}>\n          {item.name}\n        </Link>\n      )\n    })\n  }\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-inner\">\n        <div className=\"header-title\">\n          <Link className=\"header-title-link\" to={\"/\"}>{title}</Link>\n        </div>\n        <nav className=\"header-nav\">{renderMenu()}</nav>\n      </div>\n    </header>\n  )\n}\n","import React from \"react\"\nimport \"./index.css\"\n\nexport const Banner = ({ description }) => {\n  return (\n    <div className=\"banner\">\n      <div className=\"banner-title\">{description}</div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"./index.css\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      Â© {new Date().getFullYear()}, Built with\n      {` `}\n      <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n    </footer>\n  )\n}\n","import * as React from \"react\"\nimport { Header } from \"./Header\"\nimport { Banner } from \"./Banner\"\nimport { Footer } from './Footer';\n\nconst Layout = ({ location, children, title, menu, description }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  \n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Header\n        title={title}\n        menu={menu}\n      />\n      <Banner description={description} />\n      <section className=\"main\">{children}</section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","site","buildTime","query","Header","props","title","menu","renderMenu","map","item","url","id","name","Banner","description","Footer","Date","getFullYear","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","PropTypes","Helmet","useStaticQuery","lang","meta","metaDescription","siteMetadata","defaultTitle","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"sourceRoot":""}