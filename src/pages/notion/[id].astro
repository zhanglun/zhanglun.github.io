---
import { SITE } from "src/config";
import Blogs from "@layouts/Blogs.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "src/types";
import slugify from "@utils/slugify";

import { Client } from "@notionhq/client";
import { NotionAPI } from "notion-client";
import { getAllPagesInSpace } from "notion-utils";
import Layout from "@layouts/Layout.astro";
import { NotionRenderer } from "react-notion-x";
import { getPages } from "../../../scripts/notion/get-pages.mjs";

export interface Props {
  post: MarkdownInstance<Frontmatter>;
}

type PostResult = {
  params: {
    slug: string | number;
  };
  props?: {
    post: MarkdownInstance<Record<string, any>>;
  };
}[];

type PagePaths = {
  params: {
    slug: string;
  };
}[];

export async function getStaticPaths() {
  const pages = await getPages();

  let postResult = pages.map(pageId => {
    console.log("posts[postId]", pageId.id);

    return {
      params: {
        id: pageId.id,
      },
    };
  });
  console.log("ðŸš€ ~ file: [id].astro:64 ~ postResult ~ postResult:", postResult)

  return [...postResult];
}

const { id } = Astro.params;
const notion = new NotionAPI()
const recordMap = await notion.getPage(id as string)
---

<Layout>
  <NotionRenderer recordMap={recordMap} fullPage={true} darkMode={false} />
</Layout>
