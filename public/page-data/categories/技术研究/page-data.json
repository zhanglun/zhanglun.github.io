{
    "componentChunkName": "component---src-templates-categories-tsx",
    "path": "/categories/技术研究",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"allMarkdownRemark":{"nodes":[{"excerpt":"MDX MDX是一种标准的文件格式，由Markdown和JSX组合而成，文件后缀是.mdx。也就是说你可以在MDX中使用Markdown的语法编写内容，同时还能嵌入JSX编写的组件。 可以用MDX编写纯粹的文档，把文档和Story一起添加到Storybook中。  Doc Bl…","fields":{"slug":"/blogs/Storybook 使用手册——MDX 和 Doc Blocks/"},"frontmatter":{"date":"2022-04-24","title":"Storybook 使用手册——MDX 和 Doc Blocks","description":null,"status":"publish","cover":"https://images.unsplash.com/photo-1512850183-6d7990f42385?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb","categories":["技术研究"],"tags":["JavaScrtipt","CSS","Storybook"]}},{"excerpt":"其实在使用手册的前两篇中，已经实现了组件文档的编写。开发过程中编写Story的同时，创建了基本的文档。 此外，Storybook还提供了一些工具，可以用内容和布局来拓展这个基本文档，以突出组件和Story。这在创建组件库的使用指南，设计系统网站时非常好用。下面是一个来自官方的案…","fields":{"slug":"/blogs/Storybook 使用手册——编写组件文档/"},"frontmatter":{"date":"2022-04-12","title":"Storybook 使用手册——编写组件文档","description":null,"status":"publish","cover":"https://images.unsplash.com/photo-1585647347384-2593bc35786b?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb","categories":["技术研究"],"tags":["JavaScrtipt","CSS","Storybook"]}},{"excerpt":"上一篇中介绍了什么是Storybook，以及基本的使用方法。本文将介绍在Storybook中组件组织和结构划分的一些技巧，内容来自官方推荐。 在侧边栏展示导出的Story 前面提到过，story 文件可以有默认导出和具名导出两种方式，导出的对象都会在左边的侧边栏展示。具体来说，…","fields":{"slug":"/blogs/Storybook 使用手册——组件命名和结构层次/"},"frontmatter":{"date":"2022-04-03","title":"Storybook 使用手册——组件命名和结构层次","description":null,"status":"publish","cover":"https://www.notion.so/images/page-cover/nasa_robert_stewart_spacewalk_2.jpg","categories":["技术研究"],"tags":["JavaScrtipt","CSS","Storybook"]}},{"excerpt":"前两天上网冲浪时，在Node的Github仓库中，有这么一个Pull Request test: add initial test module #42325 ，顺着这个PR，可以找到一个提案：Proposal: Adding a built-in test runner 。 …","fields":{"slug":"/blogs/Node.js 将要内置测试模块/"},"frontmatter":{"date":"2022-03-30","title":"Node.js 将要内置测试模块","description":null,"status":"publish","cover":"https://images.unsplash.com/photo-1528459801416-a9e53bbf4e17?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb","categories":["技术研究"],"tags":["Node.js"]}},{"excerpt":"什么是Storybook Storybook 是一个用于UI开发的开源工具，通过隔离组件，使开发更快、更容易。它提供了一套完整的开发流程，你可以不用配置一个复杂的开发环境、不用和数据库交互，也不需要和你的应用程序关联。 Storybook可以帮你记录组件的文档，以便重复使用，并…","fields":{"slug":"/blogs/Storybook 使用手册——基本概念/"},"frontmatter":{"date":"2022-03-16","title":"Storybook 使用手册——基本概念","description":null,"status":"publish","cover":"https://images.unsplash.com/photo-1605418524574-0159244a11be?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb","categories":["技术研究"],"tags":["CSS","Storybook","JavaScrtipt"]}},{"excerpt":"对象拷贝这个话题算是老生常谈了，从浅拷贝到深拷贝，从最简单的JSON.stringfy()到递归遍历赋值，作为面试八股文的常客，字节的朋友甚至写出了惊艳面试官的深拷贝，不得不佩服。 通常在项目开发中，遇到深拷贝的场景，一般有多种处理方式： 使用其他第三方库 使用有前人“沉淀”的…","fields":{"slug":"/blogs/JavaScript深拷贝的新方法-structureClone/"},"frontmatter":{"date":"2021-12-18","title":"JavaScript深拷贝的新方法-structureClone","description":null,"status":"publish","cover":"https://www.notion.so/images/page-cover/met_gerome_1890.jpg","categories":["技术研究"],"tags":["JavaScrtipt"]}},{"excerpt":"最近看到一片文章 Solving a Mystery Behavior of parseInt() in JavaScript，讲的是JavaScript中的parseInt()的一个奇怪现象。 parseInt()是JavaScript内置的一个方法，能将数字型的字符串转换成…","fields":{"slug":"/blogs/2021-04-23-ParseInt()的迷幻行为/"},"frontmatter":{"date":"2021-04-23","title":"ParseInt()的迷幻行为","description":null,"status":null,"cover":null,"categories":["技术研究"],"tags":["Javascript"]}},{"excerpt":"今天在开发过程中遇到一个报错 糟糕，遇到CommonJS和ESModule两兄弟打架了😢 错误信息简单翻译一下就是: 我项目中使用require()加载了一个ES Module，后者不支持require()。要么我把自己的 JavaScript 文件后缀改成 .cjs ，然后用…","fields":{"slug":"/blogs/劝架CommonJS和ESModule/"},"frontmatter":{"date":"2021-02-10","title":"劝架CommonJS和ESModule","description":null,"status":"publish","cover":"","categories":["技术研究"],"tags":["JavaScrtipt","Node.js"]}},{"excerpt":"最近正在实现一个动画特效，有一个非常简单的需求 请求获取到一个数组A之后，将数组的内容以动画弹窗的方式展示给用户，要求： 每次弹窗出现的时间间隔是随机 弹窗的内容从数组A随机的一个元素 这里就涉及到随机数的创建了。 在JavaScript中生成随机数 在JavaScript中获…","fields":{"slug":"/blogs/2020-12-14-随机的联想/"},"frontmatter":{"date":"2020-12-14","title":"关于JavaScript的随机数","description":null,"status":null,"cover":null,"categories":["技术研究"],"tags":[]}},{"excerpt":"之前的文章single-spa源码解析-registerApplication和start中，对single-spa提供的两个关键方法的源码进行了简单分析。今天来讲一讲如何在项目中接入使用。 要创建一个single-spa应用程序，需要做三件事： 创建一个 html 文件 这个…","fields":{"slug":"/blogs/2020-11-28-如何在项目中接入single-spa/"},"frontmatter":{"date":"2020-11-28","title":"如何在项目中接入single-spa","description":null,"status":null,"cover":null,"categories":["技术研究"],"tags":[]}},{"excerpt":"首先将问题简化，假定主应用和子应用都已经准备好的情况下，针对应用的注册和启动这两个关键操作进行分析。 在主应用中只需要调用registerApplication即可注册子应用，调用start启动主应用。比如下面的例子 registerApplication 先让我们来看一下函数…","fields":{"slug":"/blogs/2020-11-21-single-spa源码解析-registerApplication和start/"},"frontmatter":{"date":"2020-11-21","title":"single-spa源码解析-registerApplication和start","description":null,"status":null,"cover":null,"categories":["技术研究"],"tags":[]}},{"excerpt":"背景 随着组织架构调整，目前来车服租车团队已经有一段时间了。虽然主要业务工作还是B端系统的开发，但是租车业务因其业务特点以及一些历史原因，我面对的是两个“巨无霸”型后台系统-Car系统和Car-mis系统。这两个系统历史悠久，经手多个团队，所有租车相关的业务模块诸如交易，商品，…","fields":{"slug":"/blogs/2020-11-05-使用Single-SPA实现微前端/"},"frontmatter":{"date":"2020-11-05","title":"使用 single-spa 实现微前端","description":null,"status":null,"cover":null,"categories":["技术研究"],"tags":[]}},{"excerpt":"最近在写自己的小项目时，想试试 CSS variables，于是便有了此文。 之前也使用过 Sass，Less 之类的预处理器。因为 node-sass 的安装和编译频繁出现失败的问题，所以一直都是 Less 用的比较多。当我回想日常使用Less的经历时，却发现似乎除了变量，嵌…","fields":{"slug":"/blogs/2020-03-21-使用 CSS Variable 实现主题色切换/"},"frontmatter":{"date":"2020-03-21","title":"使用 CSS variables 实现主题色切换","description":null,"status":null,"cover":null,"categories":["技术研究"],"tags":["CSS"]}}]}},"pageContext":{"category":"技术研究","count":13}},
    "staticQueryHashes": ["2841359383"]}