{
    "componentChunkName": "component---src-templates-categories-tsx",
    "path": "/categories/Node.js",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"allMarkdownRemark":{"nodes":[{"excerpt":"在开发过程中，有时候会需要访问一些本地的文件，对文件进行一些操作。现在来对这方面的问题展开学习。下面是几个简单的例子，包括监听文件的变化和读取命令行中的参数 监听文件的变化 不急着动手，先想想如果做。首先，Node需要访问本地的文件，访问到文件后才有办法监听。Node自带fs模…","fields":{"slug":"/blogs/Node学习笔记-Wrangling the File System/"},"frontmatter":{"date":"2014-11-07","title":"Node学习笔记-Wrangling the File System","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"额在之前的笔记中，提到了使用middleware，设置路由，发送数据，处理请求，渲染模板等。但是这些都不足以完成一个Web应用程序，动态数据交互需要和数据库联系在一起。当用户向服务器发送一个请求，响应的服务器可能就需要向数据库发送请求，此时，之后当数据库将数据返回给服务器，服务…","fields":{"slug":"/blogs/Node学习笔记-Data Sources and Flow Control/"},"frontmatter":{"date":"2014-11-06","title":"Node学习笔记-Data Sources and Flow Control","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"因为各种版本的更新，文中的例子可能失效无法运行。毕竟Node for Front-End Developer这本书已经出现很久了。 Creating a Dynamic Page 不像其他的服务端语言开发，Node没有暗示你需要使用任何的模板引擎来创建动态页面。有很多JS模板引…","fields":{"slug":"/blogs/Node学习笔记-Server-Side Templates/"},"frontmatter":{"date":"2014-11-03","title":"Node学习笔记-Server-Side Templates","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"Node中的MiddleWare In the context of a web server, middleware is a layer between the guts of the server and the code you’re writing to run on…","fields":{"slug":"/blogs/Node学习笔记-Serving the content/"},"frontmatter":{"date":"2014-10-28","title":"Node学习笔记-Serving the content","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"最近正在学习Node，在图书馆借了基本关于Node的书，同时在网上查阅资料，颇有收获，但是整体感觉对Node的理解还是停留在一个很模棱两可的状态。比如Node中的模块，平时练习就接触到那么几个，其他的一些模块暂时只会在学习的时候接触到，不常用便就荒废了。正所谓好记心不如烂笔头，…","fields":{"slug":"/blogs/Node学习笔记-Node.js核心API之Util/"},"frontmatter":{"date":"2014-05-15","title":"Node学习笔记—Node.js核心API之Util","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"最近正在学习Node，在图书馆借了基本关于Node的书，同时在网上查阅资料，颇有收获，但是整体感觉对Node的理解还是停留在一个很模棱两可的状态。比如Node中的模块，平时练习就接触到那么几个，其他的一些模块暂时只会在学习的时候接触到，不常用便就荒废了。正所谓好记心不如烂笔头，…","fields":{"slug":"/blogs/Node学习笔记-Node.js核心API之HTTP/"},"frontmatter":{"date":"2014-05-13","title":"Node学习笔记-Node.js中的核心API之HTTP","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"最近正在学习Node，在图书馆借了基本关于Node的书，同时在网上查阅资料，颇有收获，但是整体感觉对Node的理解还是停留在一个很模棱两可的状态。比如Node中的模块，平时练习就接触到那么几个，其他的一些模块暂时只会在学习的时候接触到，不常用便就荒废了。正所谓好记心不如烂笔头，…","fields":{"slug":"/blogs/Node学习笔记-Node.js核心API之Events/"},"frontmatter":{"date":"2014-05-12","title":"Node学习笔记-Nodejs中的核心API之Events","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"之前简单的了解了 Node.js 。对 Node.js  有一个简单的认识。接下来查看了 API 文档中模块有关的知识点，参照《Node.js 开发指南》，并做笔记。 模块和包是 Node.js 中最重要的支柱。经常将模块和包相提并论，因为二者之间其实没有本质上的区别，经常混用…","fields":{"slug":"/blogs/Node学习笔记-Node.js中的模块和包/"},"frontmatter":{"date":"2014-04-25","title":"Node学习笔记-Node.js中的模块","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["笔记","Node.js"]}},{"excerpt":"Node.js学习入门 ##Node.js 是什么\r\nNode.js 不是一种独立的语言，与 PHP，Python 等”既是语言优势平台“不同，它也不是一个 JavaScrip 框架，不同于 CakePHP，Django，更不是一个 JavaScript 库，不能和 jQuer…","fields":{"slug":"/blogs/Node学习笔记-Node.js介绍/"},"frontmatter":{"date":"2014-04-19","title":"Node.js入门-Node.js 介绍","description":null,"status":null,"cover":null,"categories":["Node.js"],"tags":["Node.js"]}}]}},"pageContext":{"category":"Node.js","count":9}},
    "staticQueryHashes": ["2841359383"]}