{
    "componentChunkName": "component---src-templates-categories-tsx",
    "path": "/categories/前端",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"allMarkdownRemark":{"nodes":[{"excerpt":"ES5 和 ES6 中 Object 添加了很多新的方法，现在很多开源代码中有用到了这些，今天来整理一番。 Object.assign() 这是ES6新添加的方法，Object.assign()用来复制源对象的所有可枚举属性复制到目标对象中，方法返回目标对象。语法如下： sou…","fields":{"slug":"/blogs/2017-01-19-整理Object的一些方法/"},"frontmatter":{"date":"2017-01-19","title":"整理Object的一些方法","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["JavaScript"]}},{"excerpt":"在这几天的工作中，我需要调用同事编写的兼容jQuery和React的通用组件。他为了兼容jQuery风格的调用和React的组件化，分别export了一个default和几个方法函数。在调用的过程中，出现了一些小插曲：React代码和老的jQuery老代码调用时应该怎么正确的i…","fields":{"slug":"/blogs/2017-01-11-JavaScrip-模块系统详解/"},"frontmatter":{"date":"2017-01-11","title":"JavaScrip模块系统详解","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["JavaScript"]}},{"excerpt":"解构赋值（destructuring assignment）语法是一个Javascript表达式，这种语法能够更方便的提取出 Object 或者 Array 中的数据。这种语法可以在接受提取的数据的地方使用，比如一个表达式的左边。有明确的语法模式来告诉我们如何使用这种语法提取需…","fields":{"slug":"/blogs/2017-01-05-深入理解 ES6 的解构赋值/"},"frontmatter":{"date":"2017-01-05","title":"深入理解 ES6 的解构赋值","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["JavaScript"]}},{"excerpt":"上回讲到Firebase 的创建项目和用户管理。今天来说说 Firebase 的数据库的使用。 Firebase Realtime Database 是一种云托管数据库。数据库将数据存储为 JSON，并以实时方式与每个连接的客户端同步。 当使用JavaScript SDK 构建…","fields":{"slug":"/blogs/2016-12-24-使用Firebase构建云端应用-数据库的管理/"},"frontmatter":{"date":"2016-12-24","title":"使用Firebase构建云端应用-数据库的管理","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["React","JavaScript"]}},{"excerpt":"在构建自己的在线云工具应用时，我使用 Firebase 为自己的“无后端项目”提供服务，把在开发期间接触到的一些内容整理在一起，制成系列笔记。这个过程有两个好处：巩固知识点，整理开发过程的思路。因为前端开发是自己所熟悉的领域，所以先从 Firebase 入手，将后端的一些知识点…","fields":{"slug":"/blogs/2016-12-14-使用Firebase构建云端应用-创建项目和用户管理/"},"frontmatter":{"date":"2016-12-14","title":"使用Firebase构建云端应用:创建项目和用户管理","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["React","JavaScript"]}},{"excerpt":"最近业余时间在学习 React，配合 Redux 和 React-Router 正在不紧不慢地开发一个小工具moviemaster，用于管理硬盘中的电影剧集。在单页应用开发中，redux 并不是必须的，所以今天只讲讲 前端的路由系统以及 React-Router的简单使用。 什…","fields":{"slug":"/blogs/2016-10-30-使用-React-Router-创建单页应用/"},"frontmatter":{"date":"2016-10-30","title":"使用 React-Router 创建单页应用","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["React","JavaScript"]}},{"excerpt":"在普通的 textarea 中，只能显示普通的文本。如果简单的输入文本，textarea 便足以胜任。但是实际情况往往要复杂得多。 简单版本的插入表情 常见的版本一般都是使用 textarea，然后表情使用某种约定的文本格式代替，比如“你好啊[微笑]”。在呈现的时候，通过固定的…","fields":{"slug":"/blogs/2016-08-13-输入框插入表情的实现/"},"frontmatter":{"date":"2016-08-13","title":"输入框插入表情的实现","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["JavaScript"]}},{"excerpt":"源自 Atom-shell 的 Electron 目前是一个很火的项目。已经有很多开发者基于 Electron 开发出了各种各样的桌面程序。在我看来，对于广大前端开发者来说，最为耳熟能详的应该是 Atom 和 VS Code。在 Electron 的官网上能够看到更多有意思的项…","fields":{"slug":"/blogs/2016-08-05-Electron 开发的 gulp 配置/"},"frontmatter":{"date":"2016-08-05","title":"Electron 开发的 gulp 配置","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["electron"]}},{"excerpt":"原文链接： The future of layout with CSS: Grid Layouts The future of layout with CSS: Grid Layouts 在这片文章中，我们一起来探索 CSS 网格布局的美妙世界。网格布局是 W3C 规范中相对较…","fields":{"slug":"/blogs/2015-11-22-CSS布局的未来：网格布局/"},"frontmatter":{"date":"2015-11-22","title":"CSS 布局的未来：网格布局","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["CSS"]}},{"excerpt":"很久以前就接触到了响应式Web开发这回事，自己也玩弄过一阵。当时没有整理成笔记，现在在重构自己的在线简历以及hexo主题制作过程中涉及到，就顺手整理成一个系列吧。 响应式web设计并非新的技术，只不过将已有的开发技巧（弹性布局、弹性图片和媒体查询等）整合在了一起， 先来说说媒体…","fields":{"slug":"/blogs/我的响应式web开发实践笔记-media queries 初探/"},"frontmatter":{"date":"2014-10-10","title":"我的响应式web开发实践笔记-Media Queries 初探","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["CSS"]}},{"excerpt":"CSS 诞生已经二十年了，我接触 CSS 才两年。不说多么的精通，但是自信对基本的常用的 CSS 很熟悉。然而，一直往前赶却忽略了事情的本质。昨天有人问我盒模型，我顿时傻了，但是强作镇定稍微解释了一下，然后甩了几个链接要他自己看。我那个心虚啊……实战起来没有问题，但是却没办法说…","fields":{"slug":"/blogs/css的盒模型回顾/"},"frontmatter":{"date":"2014-10-05","title":"CSS的盒模型-过去和将来","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["CSS","笔记"]}},{"excerpt":"原文标题：Centering in CSS: A Complete Guide 原文链接：http://css-tricks.com/centering-css-complete-guide/ 在CSS-tricks上看到一篇关于CSS居中的文章，综合和大部分的CSS居中的解决…","fields":{"slug":"/blogs/css元素居中对齐大法/"},"frontmatter":{"date":"2014-09-30","title":"CSS元素居中对齐大法","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["译文","CSS","笔记"]}},{"excerpt":"自己对以后的方向很明确，但是却一直做不到。接连的 rejected 多少对自己有影响。不是自己不去争取，而是真的已经疲了，或者说自己也怂了。面试的时候已经不知道该怎么办，即使自己的知道的问题也只会模棱两可地回答。滚回学校慢慢学吧 如果你现在问我CSS的权重，我也只能说个大概。于…","fields":{"slug":"/blogs/css中的权重问题/"},"frontmatter":{"date":"2014-09-26","title":"CSS 中的权重问题","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["CSS","笔记"]}},{"excerpt":"很久很久以前，我根据网上的博文总结写了一篇博客《sass基本语法》。在那之后平时虽然不太用到sass（因为没项目做，只能自己写着玩玩），但是也还一直在试着使用sass，提高熟练度。现在写写在学习过程中的总结。 众所周知，sass 是众多CSS预处理器中的一员，基于ruby语言开…","fields":{"slug":"/blogs/学习sass时了解到的一些好玩特性/"},"frontmatter":{"date":"2014-05-08","title":"学习sass时了解到的一些好玩特性","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["Sass","CSS"]}},{"excerpt":"《高性能网站建设进阶指南》 脚本如果按照常规方式加载，不仅会阻塞页面中其他内容的下载，还会阻塞脚本后面所有元素的渲染。异步加载脚本可以避免这种阻塞现象，从而提高页面加载速度。但是性能的提升是要付出代价的。代码的异步执行可能会出现竞争状态。简单地说就是页面内部的脚本需要的标示符如…","fields":{"slug":"/blogs/高性能网站优化-整合异步脚本/"},"frontmatter":{"date":"2014-04-10","title":"高性能网站优化-确保异步加载脚本时保持执行顺序","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["web优化"]}},{"excerpt":"JavaScript和HTML之间的交互是通过事件实现的。事件，就是文档或者浏览器窗口中发生的一些特定的交互瞬间。可以使用事件处理程序来预订事件，以便在事件发生的时候执行响应的代码。这种观察者模式的模型，使得JavaScript代码与HTML和CSS代码之间形成了松散耦合。 #…","fields":{"slug":"/blogs/JavaScript中的事件处理程序/"},"frontmatter":{"date":"2014-04-06","title":"JavaScript中的事件处理程序","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["JavaScript"]}},{"excerpt":"《高性能网站建设进阶指南》 按理来说，JavaScript在浏览器中的性能问题是开发人员面对的最重要的可用性问题。但由于JavaScript天生的阻塞性质，问题变得复杂。大多数浏览器在下载或者执行脚本的同时不会下载其他内容，使用单线程处理JavaScript的解析和UI的更新。…","fields":{"slug":"/blogs/高性能网站优化-无阻塞加载脚本/"},"frontmatter":{"date":"2014-03-30","title":"高性能网站优化-无阻塞加载脚本","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["web优化"]}},{"excerpt":"《高性能网站建设进阶指南》 ##优化原则\r\n优化的目的是希望降低程序的整体开销。\r\n###减少开销\r\n通常认为开销就是程序的执行时间。而在进行优化工作时，应该把重点放在对程序开销影响最大的那部分。\r\n假设我们有四个模块：A，B，C，D，其中模块A运行所需开销54%，模块B运行所…","fields":{"slug":"/blogs/高性能网站优化-创建快速响应的web/"},"frontmatter":{"date":"2014-03-15","title":"高性能网站优化-创建快速响应的Web","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["web优化"]}},{"excerpt":"sass是一种基于ruby语言开发的CSS预处理器。它可以使用变量，嵌套，混入，继承，运算，函数等编程语言具有的特性进行CSS的开发，使得CSS的开发变得简单粗暴清晰可维护。 sass有两种后缀文件格式：一种是sass后缀形式；一种是scss后缀形式。我选择的后缀是scss 注…","fields":{"slug":"/blogs/2014-03-10-Sass语法/"},"frontmatter":{"date":"2014-03-10","title":"Sass基本语法","description":null,"status":null,"cover":null,"categories":["前端"],"tags":["CSS","Sass"]}}]}},"pageContext":{"category":"前端","count":19}},
    "staticQueryHashes": ["2841359383"]}