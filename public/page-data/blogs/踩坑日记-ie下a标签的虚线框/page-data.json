{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blogs/踩坑日记-ie下a标签的虚线框/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"99f79f48-120a-59b5-b2a8-010c64019001","html":"<h2 class=\"heading subtitle heading\" id=\"IE-下-a标签的虚线框\" style=\"position:relative;\"><a href=\"#IE-%E4%B8%8B-a%E6%A0%87%E7%AD%BE%E7%9A%84%E8%99%9A%E7%BA%BF%E6%A1%86\" aria-label=\"IE 下 a标签的虚线框 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IE 下 a标签的虚线框</h2>\n<p class=\"para\">在 IE 中，点击 a 标签时， a 标签会被加上一个虚线框，很丑！！！！！</p>\n<!-- ![image](http://img3.picbed.org/uploads/2014/07/QQ20140718_1.png) -->\n<p class=\"para\">不同版本的IE解决方案不同：IE8 下只需为 a 标签添加一条 CSS 属性就可以 <code>outline:none</code>，顺便一提 ，这条属性可以取消浏览器中输入框获得焦点是丑逼逼的外框</p>\n<!-- ![image](http://img3.picbed.org/uploads/2014/07/QQ20140718_2.png) -->\n<p class=\"para\">但是在高贵的 IE7 中，即使是添加了 <code>outline: none</code>，虚线框依旧存在，在 HTML 上加 <code>hidefocus=\"true\"</code>　如</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;a href=&quot;http://www.zhanglun.github.io/&quot; class=&quot;active&quot; hidefocus=&quot;true&quot;&gt;</code>\n        </deckgo-highlight-code>\n<hr>\n<p class=\"para\">###强大的CSS选择器</p>\n<p class=\"para\">项目最低的兼容要求是 IE8 ，所有很多以前由于兼容性问题而不常用的CSS选择器和属性都可以使用。下面记录的都是以前基本上没有用到的但是却很有用的选择器，就拿属性选择器来说，简直遍地都是。</p>\n<p class=\"para\">#####直接相邻选择器 X+Y （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera）</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">ul + p {\r\n    color: red;\r\n} </code>\n        </deckgo-highlight-code>\n<p class=\"para\">匹配在ul后面的第一个p，将段落内的文字颜色设置为红色。(只匹配第一个元素)。</p>\n<p class=\"para\">#####子选择器 X>Y （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera）</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">div#container &gt; ul {\r\n    border: 1px solid black;\r\n} \r\n\r\n&lt;div id=&quot;container&quot;&gt;\r\n    &lt;ul class=&quot;son&quot;&gt;\r\n        &lt;li&gt; List Item\r\n            &lt;ul&gt;\r\n                &lt;li&gt; Child &lt;/li&gt;\r\n            &lt;/ul&gt;\r\n        &lt;/li&gt;\r\n        &lt;li&gt; List Item &lt;/li&gt;\r\n        &lt;li&gt; List Item &lt;/li&gt;\r\n        &lt;li&gt; List Item &lt;/li&gt;\r\n    &lt;/ul&gt; \r\n&lt;/div&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">与后代选择器X Y不同的是，子选择器只对X下的<strong>直接子级Y</strong>起作用。在上面的css和html例子中，div#container>ul仅对container中<strong>最近一级的ul</strong>起作用(即拥有类名 son 的 ul)。</p>\n<p class=\"para\">####间接相邻选择器 X ~ Y （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera  ）\r\nul ~ p {\r\ncolor: red;\r\n}\r\n与前面提到的 X+Y 不同的是，X~Y 匹配与 X <strong>相同级别的所有Y元素</strong>，而<strong>X+Y只匹配第一个</strong>。</p>\n<p class=\"para\">这些选择器，给人的感觉是根据 HTML 的结构来选择对应的元素，比如说：选择在页面中相邻的元素；根据父元素选择子元素，或者兄弟元素，都依赖着结构，利用A去寻找B。下面说的 <strong>属性选择器</strong> 给人的感觉就不太一样</p>\n<p class=\"para\">####属性选择器 （兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera）</p>\n<p class=\"para\">#####X[title]——匹配的是带有 <strong>title</strong> 属性的链接元素</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">a[title] {\r\n    color: green;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">#####X[title=“foo”]——匹配所有拥有href属性，且**href为<a href=\"http://css9.net**%E7%9A%84%E6%89%80%E6%9C%89%E9%93%BE%E6%8E%A5\" class=\"link-underline\">http://css9.net**的所有链接</a></p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">a[href=&quot;http://css9.net&quot;] {\r\n    color: #1f6053; \r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">#####X[title*=“zhanglun”]——匹配的是href中**包含”zhanglun”*<em>的所有链接\r\na[href</em>=“css9.net”] {\r\ncolor: #1f6053;\r\n}</p>\n<p class=\"para\">#####X[href^=“http”]——匹配的是href中<strong>所有以http开头</strong>的链接</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">a[href^=&quot;http&quot;] {\r\n    background: url(path/to/external/icon.png) no-repeat;\r\n    padding-left: 10px;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">#####X[href$=“.jpg”]——匹配的是<strong>所有链接到扩展名为.jpg图片的链接</strong></p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">a[href^=&quot;http&quot;] {\r\n    background: url(path/to/external/icon.png) no-repeat;\r\n    padding-left: 10px;\r\n}   </code>\n        </deckgo-highlight-code>\n<p class=\"para\">#####X[data-<em>=“foo”]——匹配属性 data-</em> 为 “foo” 的元素</p>\n<p class=\"para\">在上一个选择器中提到如何匹配所有图片链接。如果使用X[href$=“.jpg”]实现，需要这样做：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">a[href$=&quot;.jpg&quot;],\r\na[href$=&quot;.jpeg&quot;],\r\na[href$=&quot;.png&quot;],\r\na[href$=&quot;.gif&quot;] {\r\n    color: red;\r\n}\r\n </code>\n        </deckgo-highlight-code>\n<p class=\"para\">看上去比较麻烦。另一个解决办法是为所有的图片链接加一个特定的属性，例如‘data-file’</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">html代码\r\n&lt;a href=&quot;path/to/image.jpg&quot; data-filetype=&quot;image&quot;&gt; 图片链接 &lt;/a&gt; \r\n\r\ncss代码如下：\r\na[data-filetype=&quot;image&quot;] {\r\n    color: red;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">这样所有链接到图片的链接字体颜色为红色。</p>\n<p class=\"para\">#####X[foo~=“bar”]——匹配属性值中用空格分隔的多个值中的一个</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">html代码\r\n&lt;a href=&quot;path/to/image.jpg&quot; data-info=&quot;external image&quot;&gt; Click Me, Fool &lt;/a&gt; \r\n\r\ncss代码\r\na[data-info~=&quot;external&quot;] {\r\n    color: red;\r\n}\r\na[data-info~=&quot;image&quot;] {\r\n    border: 1px solid black;\r\n}\r\n </code>\n        </deckgo-highlight-code>\n<p class=\"para\">在上面例子中，匹配data-info属性中包含“external”链接的字体颜色为红色。匹配data-info属性中包含“image”的链接设置黑色边框。<br>\n兼容浏览器：IE7+、Firefox、Chrome、Safari、Opera</p>","tableOfContents":"<ul>\n<li><a href=\"#ie-%E4%B8%8B-a%E6%A0%87%E7%AD%BE%E7%9A%84%E8%99%9A%E7%BA%BF%E6%A1%86\">IE 下 a标签的虚线框</a></li>\n</ul>","headings":[{"id":"IE-下-a标签的虚线框","depth":2,"value":"IE 下 a标签的虚线框"}],"frontmatter":{"title":"踩坑日记-IE下 A 标签的虚线框和必须要会用的 CSS 选择器","date":"2014-07-18","cover":null,"description":null,"categories":[],"tags":["CSS","笔记","兼容性","填坑日记"]}},"previous":{"fields":{"slug":"/blogs/git使用笔记(二)-撤销操作/"},"frontmatter":{"title":"git 使用笔记(二)-撤销操作"}},"next":{"fields":{"slug":"/blogs/git使用笔记(一)/"},"frontmatter":{"title":"Git 使用笔记(一)-入门级的操作","tags":["Git","笔记"],"categories":[],"status":null}}},"pageContext":{"id":"99f79f48-120a-59b5-b2a8-010c64019001","previousPostId":"a4ceb0d6-3e7f-5ab0-b636-c6df117ed976","nextPostId":"3ffa5f00-9101-5bf7-8e31-69205c8d5aa4"}},
    "staticQueryHashes": ["2841359383"]}