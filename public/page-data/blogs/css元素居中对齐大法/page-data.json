{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blogs/css元素居中对齐大法/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"89bccd20-b569-5892-9a9f-534704d11a64","html":"<blockquote class=\"quote\">\n<p class=\"para\">原文标题：Centering in CSS: A Complete Guide</p>\n</blockquote>\n<p class=\"para\">原文链接：<a href=\"http://css-tricks.com/centering-css-complete-guide/\" class=\"link-underline\">http://css-tricks.com/centering-css-complete-guide/</a></p>\n<blockquote class=\"quote\">\n<p class=\"para\">在CSS-tricks上看到一篇关于CSS居中的文章，综合和大部分的CSS居中的解决方案，暂且称作“CSS元素居中大法”好了。</p>\n</blockquote>\n<p class=\"para\">大家一直在吐槽的很多，其中就有关于CSS元素居中的问题。为什么这个问题看起来这么难以处理。在我看来，并不是这个问题太难，而是有太多不同的解决方案，因此很难知道哪一个是合适自己的。</p>\n<p class=\"para\">所以让我们来做一个决策树，希望能够让CSS的元素居中问题变得简单。</p>\n<p class=\"para\">##水平方向居中</p>\n<p class=\"para\">###inline 和 inline-* 元素的水平方向居中</p>\n<p class=\"para\">你可以很轻松的将一个块级元素中的inline或者类inline元素居中：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">.center-children{\r\n\ttext-align:center;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;header&gt;\r\n\tThis text is centered.\r\n&lt;/header&gt;\r\n&lt;nav role=&#39;navigation&#39;&gt;\r\n\t&lt;a href=&quot;#0&quot;&gt;One&lt;/a&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;Two&lt;/a&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;Three&lt;/a&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;Four&lt;/a&gt;\r\n&lt;/nav&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">header, nav {\r\n    text-align: center;\r\n    background: white;\r\n    margin: 20px 0;\r\n\tpadding: 10px;\r\n}\r\nnav a {\r\n    text-decoration: none;\r\n    background: #333;\r\n    border-radius: 5px;\r\n    color: white;\r\n    padding: 3px 8px;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![single-line-inline](http://ncuey-crispelite.stor.sinaapp.com/single-line-inline.png) -->\n<p class=\"para\"><strong>注意：</strong> 这个方法对inline, inline-block, inline-table, inline-flex元素都有效</p>\n<p class=\"para\">###块级元素的水平方向居中</p>\n<p class=\"para\">将一个定宽的块级元素的左外边距和右外边距设为<code>auto</code>，就是这么的easy</p>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;main&gt;\r\n    &lt;div class=&quot;center&quot;&gt;\r\n    \tI&#39;m a block level element and am centered.\r\n    &lt;/div&gt;\r\n&lt;/main&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">body {\r\n\tbackground: #f06d06;\r\n}\r\nmain {\r\n\tbackground: white;\r\n    margin: 20px 0;\r\n    padding: 10px;\r\n}\r\n.center {\r\n    margin: 0 auto;\r\n    width: 200px;\r\n    background: black;\r\n    padding: 20px;\r\n    color: white;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![single-block](http://ncuey-crispelite.stor.sinaapp.com/single-block-center.png) -->\n<p class=\"para\">如果想让多个块级元素在同一行中水平居中时，最好的处理方式就是修改块级元素的 display 的属性值。一种方式是将display的值设置为<code>inline-block</code>，另一种是<code>flexbox</code>。</p>\n<p class=\"para\">HTML：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;main class=&quot;inline-block-center&quot;&gt;\r\n    &lt;div&gt;\r\n   \t\tI&#39;m an element that is block-like with my siblings and we&#39;re centered in a row.\r\n    &lt;/div&gt;\r\n    &lt;div&gt;\r\n        I&#39;m an element that is block-like with my siblings and we&#39;re centered in a row. I have more content in me than my siblings do.\r\n    &lt;/div&gt;\r\n    &lt;div&gt;\r\n    \tI&#39;m an element that is block-like with my siblings and we&#39;re centered in a row.\r\n    &lt;/div&gt;\r\n&lt;/main&gt;\r\n\r\n&lt;!--flexbox--&gt;\r\n&lt;main class=&quot;flex-center&quot;&gt;\r\n    &lt;div&gt;\r\n        I&#39;m an element that is block-like with my siblings and we&#39;re centered in a row.\r\n    &lt;/div&gt;\r\n    &lt;div&gt;\r\n        I&#39;m an element that is block-like with my siblings and we&#39;re centered in a row. I have more content in me than my siblings do.\r\n    &lt;/div&gt;\r\n    &lt;div&gt;\r\n        I&#39;m an element that is block-like with my siblings and we&#39;re centered in a row.\r\n    &lt;/div&gt;\r\n&lt;/main&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">body {\r\n    background: #f06d06;\r\n    font-size: 80%;\r\n}\r\nmain {\r\n    background: white;\r\n    margin: 20px 0;\r\n    padding: 10px;\r\n}\r\nmain div {\r\n    background: black;\r\n    color: white;\r\n    padding: 15px;\r\n    max-width: 125px;\r\n    margin: 5px;\r\n}\r\n.inline-block-center {\r\n    text-align: center;\r\n}\r\n.inline-block-center div {\r\n    display: inline-block;\r\n    text-align: left;\r\n}\r\n.flex-center {\r\n    display: flex;\r\n    justify-content: center;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![multiple-block](http://ncuey-crispelite.stor.sinaapp.com/mulity-block-center.png) -->\n<p class=\"para\">##垂直方向居中</p>\n<p class=\"para\">关于垂直方向上的居中，需要用到一下小trickers</p>\n<p class=\"para\">###inline 和 inline-* 元素的垂直方向居中\r\n####单行的内联元素垂直居中</p>\n<p class=\"para\">最简单的一种，上内边距和下内边距相等：</p>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;main&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;We&#39;re&lt;/a&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;Centered&lt;/a&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;Bits of&lt;/a&gt;\r\n    &lt;a href=&quot;#0&quot;&gt;Text&lt;/a&gt;\r\n&lt;/main&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">main {\r\n    background: white;\r\n    margin: 20px 0;\r\n    padding: 50px;\r\n}\r\nmain a {\r\n    background: black;\r\n    color: white;\r\n    padding: 40px 30px;\r\n    text-decoration: none;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![v-single-line](http://ncuey-crispelite.stor.sinaapp.com/v-single-line.png) -->\n<p class=\"para\">因为某些原因不能使用这种简单粗暴的方法（这种方法也有其局限性），或者你想垂直居中没有元素包裹的文本的时候，利用<code>line-height</code>属性。将容器的<code>line-height</code>的值设置为与容器高度相同的值，就能很轻松的居中文本。</p>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;main&gt;\r\n    &lt;div&gt;\r\n        I&#39;m a centered line.\r\n    &lt;/div&gt;\r\n&lt;/main&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">main {\r\n    background: white;\r\n    margin: 20px 0;\r\n    padding: 40px;\r\n}\r\nmain div {\r\n    background: black;\r\n    color: white;\r\n    height: 100px;\r\n    line-height: 100px;\r\n    padding: 20px;\r\n    width: 50%;\r\n    white-space: nowrap;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![line-height](http://ncuey-crispelite.stor.sinaapp.com/v-single-lineheight.png) -->\n<p class=\"para\">####多行的内联元素垂直居中</p>\n<p class=\"para\">上下内边距相等的方法同样可以用在多行的处理上，但是就像前面所说的，这种方法有局限性。当元素是一个表格单元或者通过CSS的设置表现成一个单元格时，这种方法就不奏效了。在这种情况下，使用<code>vertical-align</code>属性来解决这个问题</p>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;table&gt;\r\n    &lt;tr&gt;\r\n    \t&lt;td&gt;\r\n        \tI&#39;m vertically centered multiple lines of text in a real table cell.\r\n        &lt;/td&gt;\r\n    &lt;/tr&gt;\r\n&lt;/table&gt;\r\n&lt;div class=&quot;center-table&quot;&gt;\r\n    &lt;p&gt;I&#39;m vertically centered multiple lines of text in a CSS-created table layout.&lt;/p&gt;\r\n&lt;/div&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">body {\r\n    background: #f06d06;\r\n    font-size: 80%;\r\n}\r\ntable {\r\n    background: white;\r\n    width: 240px;\r\n    border-collapse: separate;\r\n    margin: 20px;\r\n    height: 250px;\r\n}\r\ntable td {\r\n    background: black;\r\n    color: white;\r\n    padding: 20px;\r\n    border: 10px solid white;\r\n    /* 单元格自带 vertical-align: middle; */\r\n}\r\n.center-table {\r\n    display: table;\r\n    height: 250px;\r\n    background: white;\r\n    width: 240px;\r\n    margin: 20px;\r\n}\r\n.center-table p {\r\n    display: table-cell; // 将p表现成一个单元格\r\n    margin: 0;\r\n    background: black;\r\n    color: white;\r\n    padding: 20px;\r\n    border: 10px solid white;\r\n    vertical-align: middle; // 添加单元格默认的属性\r\n}</code>\n        </deckgo-highlight-code>\n<!--![nu-table-cell](http://ncuey-crispelite.stor.sinaapp.com/mu-table-cell.png) -->\n<p class=\"para\">如果不能使用“表格大法”，可以试试flexbox。一个flex-child在flex-parent中垂直居中松松的。</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">.flex-center-vertically {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 400px;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">完整的demo</p>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;div class=&quot;flex-center&quot;&gt;\r\n\t&lt;p&gt;I&#39;m vertically centered multiple lines of text in a flexbox container.&lt;/p&gt;\r\n&lt;/div&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">body {\r\n    background: #f06d06;\r\n    font-size: 80%;\r\n}\r\ndiv {\r\n    background: white;\r\n    width: 240px;\r\n    margin: 20px;\r\n}\r\n.flex-center {\r\n    background: black;\r\n    color: white;\r\n    border: 10px solid white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: 200px;\r\n}\r\n.flex-center p {\r\n    margin: 0;\r\n    padding: 20px;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![mu-flex-center](http://ncuey-crispelite.stor.sinaapp.com/mu-flex-center.png) -->\n<p class=\"para\">flex-parent元素必须指定一个固定高度。</p>\n<p class=\"para\">还有一种称之为“幽灵元素”的技术，可以在上述方法不适用的情况下使用。其实现原理是：在container容器中放置一个<code>height:100%</code>的伪元素，然后文本与这个伪元素垂直对齐。核心代码：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">.ghost-center {\r\n\tposition: relative;\r\n}\r\n.ghost-center::before {\r\n    content: &quot; &quot;;\r\n    display: inline-block;\r\n    height: 100%;\r\n    width: 1%;\r\n    vertical-align: middle;\r\n}\r\n.ghost-center p {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">完整的demo：</p>\n<p class=\"para\">HTML:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;div class=&quot;ghost-center&quot;&gt;\r\n    &lt;p&gt;I&#39;m vertically centered multiple lines of text in a container. Centered with a ghost pseudo element&lt;/p&gt; \r\n    &lt;p&gt;I&#39;m vertically centered multiple lines of text in a container. Centered with a ghost pseudo elementI&#39;m vertically centered multiple lines of text in a container. Centered with a ghost pseudo elementI&#39;m vertically centered multiple lines of text in a container. Centered with a ghost pseudo element&lt;/p&gt;\r\n&lt;/div&gt;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">CSS:</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">body {\r\n    background: #f06d06;\r\n    font-size: 80%;\r\n}\r\ndiv {\r\n    background: white;\r\n    height: 360px;\r\n    margin: 20px;\r\n    color: white;\r\n    resize: vertical;\r\n    overflow: auto;\r\n    padding: 20px;\r\n}\r\n.ghost-center::before {\r\n    content: &quot;&quot;;\r\n    display: inline-block;\r\n    height: 100%;\r\n    width: 10px; // 为了效果明显 设置了一个固定的宽度 增加了背景色\r\n    background:red;\r\n    vertical-align: middle;\r\n}\r\n.ghost-center p {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    width: 190px;\r\n    margin: 0;\r\n    padding: 20px;\r\n    background: black;\r\n}</code>\n        </deckgo-highlight-code>\n<!--![presudo-element-center](http://ncuey-crispelite.stor.sinaapp.com/presudo-element-center.png) -->\n<p class=\"para\">你可以试着修改伪元素的高度~~</p>\n<p class=\"para\">####单个块级元素的垂直方向居中</p>\n<p class=\"para\">在页面的布局中，其高度未知是很正常的，有很多原因。当宽度改变的时候，内容中的文本回流改变高度；变化的文本样式也可能改变高度；变化的文本数量也会改变高度；一些按比例放置的元素，比如图片，当它调整大小的时候，高度也会变化；等等。</p>\n<p class=\"para\">如果知道元素的高度。可以使用定位来垂直居中：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">.parent {\r\n\tposition: relative;\r\n}\r\n.child {\r\n    position: absolute;\r\n    top: 50%;\r\n    height: 100px;\r\n    margin-top: -50px; \r\n    // 这里实际上元素高度的一半，如果没有使用box-sizing:border-box;则需要计算padding和border\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">如果不知道元素的高度，也有办法。先定位再平移</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">.parent {\r\n\tposition: relative;\r\n}\r\n.child {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">当top:50%时，元素的顶部与其包裹的容器高度一半的位置处对齐。利用transform在Y轴上平移时，默认情况下参考点是元素的正中心，向上平移50%的距离其实就是元素的高度一半。</p>\n<!--![](http://ncuey-crispelite.stor.sinaapp.com/2014-10-03_195015.png) -->\n<p class=\"para\">当然如果使用flexbox也是很简单，不必大惊小怪</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">.parent {\r\n    display: flex;\r\n    flex-direction: column;\r\n\tjustify-content: center;\r\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">##水平方向和垂直方向同时居中</p>\n<p class=\"para\">前面分开介绍了水平方向和垂直方向上CSS元素居中的解决方案。我们可以组合上面的方法，提出两个方向上同时居中对齐的解决方案。但是我发现一般来说可以分成三类</p>\n<p class=\"para\">###固定大小的元素两个方向上的居中对齐</p>\n<p class=\"para\">在两个方向上定位之后，水平方向上添加值为宽度的一半的负margin，在垂直方向上添加值为高度一般的负margin。</p>\n<p class=\"para\">这很好理解，无需做过多解释</p>\n<p class=\"para\">###大小未知的元素两个方向上的居中对齐</p>\n<p class=\"para\">这个可以说其实就是上面介绍的方法的拓展，只不过也是增加了一个水平方向的处理而已，自己想想~~</p>\n<p class=\"para\">###第三类：flexbox</p>\n<p class=\"para\">第三类就是可以称之上万能的的CSS3中的flexbox</p>\n<p class=\"para\">##结论</p>\n<p class=\"para\">酱紫，你就可以轻松解决CSS的元素居中问题了。拜拜了，CSS Center。</p>","tableOfContents":"","headings":[],"frontmatter":{"title":"CSS元素居中对齐大法","date":"2014-09-30","cover":null,"description":null,"categories":["前端"],"tags":["译文","CSS","笔记"]}},"previous":{"fields":{"slug":"/blogs/规范之路-normal flow/"},"frontmatter":{"title":"规范之路-Normal Flow"}},"next":{"fields":{"slug":"/blogs/css中的权重问题/"},"frontmatter":{"title":"CSS 中的权重问题","tags":["CSS","笔记"],"categories":["前端"],"status":null}}},"pageContext":{"id":"89bccd20-b569-5892-9a9f-534704d11a64","previousPostId":"843d1f02-d894-561b-aa0d-0adf2cde8963","nextPostId":"f785663d-a8b1-5461-849f-c3b961733ad1"}},
    "staticQueryHashes": ["2841359383"]}