{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blogs/2020-11-28-如何在项目中接入single-spa/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"d0f0ca39-1cce-5939-a405-e41f8619403c","html":"<p class=\"para\">之前的文章<a href=\"../single-spa%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-registerapplication%E5%92%8Cstart\" class=\"link-underline\">single-spa源码解析-registerApplication和start</a>中，对single-spa提供的两个关键方法的源码进行了简单分析。今天来讲一讲如何在项目中接入使用。</p>\n<p class=\"para\">要创建一个single-spa应用程序，需要做三件事：</p>\n<h2 class=\"heading subtitle heading\" id=\"创建一个-html-文件\" style=\"position:relative;\"><a href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA-html-%E6%96%87%E4%BB%B6\" aria-label=\"创建一个 html 文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建一个 html 文件</h2>\n<p class=\"para\">这个文件的目的就是加载single-spa的 config 配置，调用 <code>registerApplication()</code> 方法。</p>\n<deckgo-highlight-code language=\"html\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">&lt;html&gt;\n&lt;body&gt;\n\t&lt;script src=&quot;single-spa-config.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code>\n        </deckgo-highlight-code>\n<h2 class=\"heading subtitle heading\" id=\"创建一个single-spa-config\" style=\"position:relative;\"><a href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAsingle-spa-config\" aria-label=\"创建一个single spa config permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建一个single-spa-config。</h2>\n<p class=\"para\">只有先注册应用，single—spa才能知道在什么时机，如何初始化、下载、挂载和卸载对应的应用。通常会在配置文件中将应用注册。通过调用<code>registerApplication</code>方法来注册应用。例如：</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">// single-spa-config.js\nimport { registerApplication, start } from &#39;single-spa&#39;;\n// Simple usage\nregisterApplication(\n  &#39;app2&#39;,\n  () =&gt; import(&#39;src/app2/main.js&#39;),\n  (location) =&gt; location.pathname.startsWith(&#39;/app2&#39;),\n  { some: &#39;value&#39; }\n);\n// Config with more expressive API\nregisterApplication({\n  name: &#39;app1&#39;,\n  app: () =&gt; import(&#39;src/app1/main.js&#39;),\n  activeWhen: &#39;/app1&#39;,\n  customProps: {\n    some: &#39;value&#39;,\n  }\n);\nstart();</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"参数\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E6%95%B0\" aria-label=\"参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参数</h3>\n<h4 class=\"heading\" id=\"name\" style=\"position:relative;\"><a href=\"#name\" aria-label=\"name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>name</h4>\n<p class=\"para\"><code>registerApplication</code>的第一个参数表示应用名称，<code>name</code>必须是string类型</p>\n<h4 class=\"heading\" id=\"Loading-Function-or-Application\" style=\"position:relative;\"><a href=\"#Loading-Function-or-Application\" aria-label=\"Loading Function or Application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loading Function or Application</h4>\n<p class=\"para\"><code>registerApplication</code>可以是一个Promise类型的 <a href=\"configuration#loading-function\" class=\"link-underline\">加载函数</a>，也可以是一个已经被解析的应用。</p>\n<h5 class=\"heading\" id=\"Application-as-second-argument\" style=\"position:relative;\"><a href=\"#Application-as-second-argument\" aria-label=\"Application as second argument permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application as second argument</h5>\n<p class=\"para\">你可以选择将一个已经被解析过的应用作为<code>registerApplication</code>的第二个参数，这个应用其实是一个包含各个生命周期函数的对象。我们既可以从另外一个文件中引入该对象，也可以在single-spa的配置文件中定义这个对象。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">const application = {\n  bootstrap: () =&gt; Promise.resolve(), //bootstrap function\n  mount: () =&gt; Promise.resolve(), //mount function\n  unmount: () =&gt; Promise.resolve(), //unmount function\n}\nregisterApplication(&#39;applicationName&#39;, application, activityFunction)</code>\n        </deckgo-highlight-code>\n<h5 class=\"heading\" id=\"加载函数\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E8%BD%BD%E5%87%BD%E6%95%B0\" aria-label=\"加载函数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加载函数</h5>\n<p class=\"para\"><code>registerApplication</code>的第二个参数必须是返回promise的函数(或<a href=\"https://ponyfoo.com/articles/understanding-javascript-async-await\" class=\"link-underline\">“async function”</a>方法)。这个函数没有入参，会在应用第一次被下载时调用。返回的Promise resolve之后的结果必须是一个可以被解析的应用。常见的实现方法是使用import加载：<code>() => import('/path/to/application.js')</code></p>\n<h4 class=\"heading\" id=\"激活函数\" style=\"position:relative;\"><a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\" aria-label=\"激活函数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>激活函数</h4>\n<p class=\"para\"><code>registerApplication</code>的第三个参数需要是一个纯函数，<code>window.location</code>会作为第一个参数被调用，当函数返回的值为真(truthy)值时，应用会被激活。通常情况下，Activity function会根据<code>window.location</code>/后面的path来决定该应用是否需要被激活。\n另外一种场景是single-spa根据顶级路由查找应用，而每个应用会处理自身的子路由。 在以下场景，single-spa会调用应用的activity function</p>\n<p class=\"para\">在以下情况下，single-spa将调用每个应用的活动函数：</p>\n<ul>\n<li><code>hashchange</code> or <code>popstate</code>事件触发时</li>\n<li><code>pushState</code> or <code>replaceState</code>被调用时</li>\n<li>在single-spa上手动调用[<code>triggerAppChange</code>] 方法</li>\n<li><code>checkActivityFunctions</code>方法被调用时</li>\n</ul>\n<h4 class=\"heading\" id=\"自定义属性\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7\" aria-label=\"自定义属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义属性</h4>\n<p class=\"para\"><code>registerApplication</code>函数可选的第四个参数是 <a href=\"/docs/building-applications/#custom-props\" class=\"link-underline\">custom props</a>。这个参数会传递给 single-spa 的 <code>lifecycle</code> 函数。自定义属性可以是一个对象，也可以是一个返回Object的函数。如果自定属性是一个函数，函数的参数是应用的名字（application name)和当前<code>window.location</code>。</p>\n<h3 class=\"heading\" id=\"使用对象参数\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E5%8F%82%E6%95%B0\" aria-label=\"使用对象参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用对象参数</h3>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">singleSpa.registerApplication({\n  name: &#39;myApp&#39;,\n  app: () =&gt; import(&#39;src/myApp/main.js&#39;),\n  activeWhen: [&#39;/myApp&#39;, (location) =&gt; location.pathname.startsWith(&#39;/some/other/path&#39;)],\n  customProps: {\n    some: &#39;value&#39;,\n  },\n});\n\nsingleSpa.registerApplication({\n  name: &#39;myApp&#39;,\n  app: () =&gt; import(&#39;src/myApp/main.js&#39;),\n  activeWhen: [&#39;/myApp&#39;, (location) =&gt; location.pathname.startsWith(&#39;/some/other/path&#39;)],\n  customProps: (name, location) =&gt; ({\n    some: &#39;value&#39;,\n  }),\n});</code>\n        </deckgo-highlight-code>\n<h4 class=\"heading\" id=\"configname\" style=\"position:relative;\"><a href=\"#configname\" aria-label=\"configname permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>config.name</h4>\n<p class=\"para\">必须是字符串。</p>\n<h4 class=\"heading\" id=\"configapp\" style=\"position:relative;\"><a href=\"#configapp\" aria-label=\"configapp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>config.app</h4>\n<p class=\"para\">应用的定义，它可以是一个单spa生命周期的对象，加载函数或者与第二个参数相同。</p>\n<h4 class=\"heading\" id=\"configactiveWhen\" style=\"position:relative;\"><a href=\"#configactiveWhen\" aria-label=\"configactiveWhen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>config.activeWhen</h4>\n<p class=\"para\">可以是激活函数，比如参数API、路径前缀或两者的数组。因为最常见的用例是使用<code>window.location</code> 将其URL前缀进行匹配，所以我们帮你实现了这个方法。</p>\n<h4 class=\"heading\" id=\"Path-prefix\" style=\"position:relative;\"><a href=\"#Path-prefix\" aria-label=\"Path prefix permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Path prefix</h4>\n<p class=\"para\">路径前缀会匹配url，允许以下每一种前缀：</p>\n<dl>\n  <dt>'/app1'</dt>\n  <dd>✅ https://app.com/app1</dd>\n  <dd>✅ https://app.com/app1/anything/everything</dd>\n  <dd>🚫 https://app.com/app2</dd>\n  <dt>'/users/:userId/profile'</dt>\n  <dd>✅ https://app.com/users/123/profile</dd>\n  <dd>✅ https://app.com/users/123/profile/sub-profile/</dd>\n  <dd>🚫 https://app.com/users//profile/sub-profile/</dd>\n  <dd>🚫 https://app.com/users/profile/sub-profile/</dd>\n  <dt>'/pathname/#/hash'</dt>\n  <dd>✅ https://app.com/pathname/#/hash</dd>\n  <dd>✅ https://app.com/pathname/#/hash/route/nested</dd>\n  <dd>🚫 https://app.com/pathname#/hash/route/nested</dd>\n  <dd>🚫 https://app.com/pathname#/another-hash</dd>\n  <dt>['/pathname/#/hash', '/app1']</dt>\n  <dd>✅ https://app.com/pathname/#/hash/route/nested</dd>\n  <dd>✅ https://app.com/app1/anything/everything</dd>\n  <dd>🚫 https://app.com/pathname/app1</dd>\n  <dd>🚫 https://app.com/app2</dd>\n</dl>\n<h4 class=\"heading\" id=\"自定义属性-1\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7-1\" aria-label=\"自定义属性 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义属性</h4>\n<p class=\"para\"><code>registerApplication</code>函数可选的第四个参数是 <a href=\"/docs/building-applications/#custom-props\" class=\"link-underline\">custom props</a>。这个参数会传递给 single-spa 的 <code>lifecycle</code> 函数。自定义属性可以是一个对象，也可以是一个返回Object的函数。如果自定属性是一个函数，函数的参数是应用的名字（application name)和当前<code>window.location</code></p>\n<h2 class=\"heading subtitle heading\" id=\"调用-singleSpastart\" style=\"position:relative;\"><a href=\"#%E8%B0%83%E7%94%A8-singleSpastart\" aria-label=\"调用 singleSpastart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>调用 singleSpa.start()</h2>\n<p class=\"para\"><a href=\"api.md#start\" class=\"link-underline\"><code>start()方法</code></a> <strong>必须</strong>被single-spa配置文件的js调用，这时应用才会被真正挂载。在<code>start</code>被调用之前，应用先被下载，但不会初始化/挂载/卸载。<code>start</code>方法可以协助我们更好提升应用的性能。举个例子，我们可能会马上注册一个应用(为了立刻下载代码)，但不能马上就在DOM节点上挂载该应用，而是需要等一个AJAX请求(可能会获取用户的登录信息)完成后，再根据结果进行挂载。这种情况下，最佳实践是先调用<code>registerApplication</code>，等AJAX请求完成后再调用<code>start</code>。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">//single-spa-config.js\nimport { start } from &#39;single-spa&#39;;\n\n/*在注册应用之前调用start意味着single-spa可以立即安装应用，无需等待单页应用的任何初始设置。*/\nstart();\n// 注册应用。。。。</code>\n        </deckgo-highlight-code>\n<h2 class=\"heading subtitle heading\" id=\"创建一个应用程序\" style=\"position:relative;\"><a href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\" aria-label=\"创建一个应用程序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建一个应用程序。</h2>\n<p class=\"para\">single-spa 应用与普通的单页面是一样的，只不过它没有HTML页面。在一个single-spa中，可以包含许多被注册的应用，而各个应用可以使用不同的框架。被注册的这些应用维护自己的客户端路由，使用自己需要的框架或者类库。应用只要通过挂载，便可渲染自己的html页面，并自由实现功能。“挂载”(mounted)的概念指的是被注册的应用内容是否已展示在DOM上。我们可通过应用的<a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\" class=\"link-underline\">activity function</a>来判断其是否已被挂载。应用在未挂载之前，会一直保持休眠状态。</p>\n<p class=\"para\">在一个 single-spa 页面，注册的应用会经过下载(loaded)、初始化(initialized)、被挂载(mounted)、卸载(unmounted)和unloaded（被移除）等过程。single-spa会通过“生命周期”为这些过程提供钩子函数。\n生命周期函数是 single-spa 在注册的应用上调用的一系列函数，single-spa 会在各应用的主文件中，查找对应的函数名并进行调用。所以注册的应用必须保证在其入口文件实现下面提到的各个生命周期函数。</p>\n<ul>\n<li><code>bootstrap</code>, <code>mount</code>, and <code>unmount</code>的实现是必须的，<code>unload</code>则是可选的</li>\n<li>生命周期函数必须有返回值，可以是Promise或者<code>async</code>函数</li>\n<li>如果导出的是函数数组而不是单个函数，这些函数会被依次调用，对于promise函数，会等到resolve之后再调用下一个函数</li>\n<li>如果 single-spa <a href=\"api.md#start\" class=\"link-underline\">未启动</a>，各个应用会被下载，但不会被初始化、挂载或卸载。</li>\n</ul>\n<blockquote class=\"quote\">\n<p class=\"para\"><strong>注</strong></p>\n<p class=\"para\">在<a href=\"ecosystem.md\" class=\"link-underline\">single-spa 生态</a>中有各个主流框架对于生命周期函数的实现，这些文档有助于理解这些helper执行的操作，也有助于你自己实现生命周期函数。</p>\n</blockquote>\n<h3 class=\"heading\" id=\"生命周期参数\" style=\"position:relative;\"><a href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%82%E6%95%B0\" aria-label=\"生命周期参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>生命周期参数</h3>\n<p class=\"para\">生命周期函数使用”props” 传参，这个对象包含single-spa相关信息和其他的自定义属性。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">function bootstrap(props) {\n  const {\n    name,        // 应用名称\n    singleSpa,   // singleSpa实例\n    mountParcel, // 手动挂载的函数\n    customProps  // 自定义属性\n  } = props;     // Props 会传给每个生命周期函数\n  return Promise.resolve();\n}</code>\n        </deckgo-highlight-code>\n<h4 class=\"heading\" id=\"内置参数\" style=\"position:relative;\"><a href=\"#%E5%86%85%E7%BD%AE%E5%8F%82%E6%95%B0\" aria-label=\"内置参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内置参数</h4>\n<p class=\"para\">每个生命周期函数的入参都会保证有如下参数：</p>\n<ul>\n<li><code>name</code>: 注册到 single-spa 的应用名称</li>\n<li><code>singleSpa</code>: 对singleSpa 实例的引用, 方便各应用和类库调用singleSpa提供的API时不再导入它。 可以解决有多个webpack配置文件构建时无法保证只引用一个singleSpa实例的问题。</li>\n<li><code>mountParcel</code>: <a href=\"/docs/parcels-api.html#mountparcel\" class=\"link-underline\">mountParcel 函数</a>.</li>\n</ul>\n<h4 class=\"heading\" id=\"自定义参数\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0\" aria-label=\"自定义参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义参数</h4>\n<p class=\"para\">除single-spa提供的内置参数外，还可以指定自定义参数，在调用各个生命周期函数时传入。指定方法是在调用<code>registerApplication</code>时，传入第4个参数。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">// root.application.js\nsingleSpa.registerApplication({\n  name: &#39;app1&#39;,\n  activeWhen,\n  app,\n  customProps: { authToken: &quot;d83jD63UdZ6RS6f70D0&quot; }\n});\nsingleSpa.registerApplication({\n  name: &#39;app1&#39;,\n  activeWhen,\n  app,\n  customProps: (name, location) =&gt; {\n    return { authToken: &quot;d83jD63UdZ6RS6f70D0&quot; };\n  }\n});</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">// app1.js\nexport function mount(props) {\n  console.log(props.authToken); // 可以在 app1 中获取到authToken参数\n  return reactLifecycles.mount(props);\n}</code>\n        </deckgo-highlight-code>\n<p class=\"para\">可能使用到的场景：</p>\n<ul>\n<li>各个应用共享一个公共的 access token</li>\n<li>下发初始化信息，如渲染目标</li>\n<li>传递对事件总线（event bus）的引用，方便各应用之间进行通信</li>\n</ul>\n<p class=\"para\">注意如果没有提供自定义参数，则<code>props.customProps</code>默认会返回一个空对象。</p>\n<h3 class=\"heading\" id=\"下载load\" style=\"position:relative;\"><a href=\"#%E4%B8%8B%E8%BD%BDload\" aria-label=\"下载load permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>下载(load)</h3>\n<p class=\"para\">注册的应用会被懒加载，这指的是该应用的代码会从服务器端下载并执行。注册的应用在<a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\" class=\"link-underline\">activity function</a> 第一次返回真值(truthy value)时，下载动作会发生。在下载过程中，建议尽可能执行少的操作，可以在<code>bootstrap</code>生命周期之后再执行各项操作。若确实有在下载时需要执行的操作，可将代码放入子应用入口文件中，但要放在各导出函数的外部。例如：</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">console.log(&quot;The registered application has been loaded!&quot;);\nexport async function bootstrap(props) {...}\nexport async function mount(props) {...}\nexport async function unmount(props) {...}</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"初始化\" style=\"position:relative;\"><a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96\" aria-label=\"初始化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>初始化</h3>\n<p class=\"para\">这个生命周期函数会在应用<strong>第一次</strong>挂载前<strong>执行一次</strong>。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">export function bootstrap(props) {\n  return Promise\n    .resolve()\n    .then(() =&gt; {\n      // One-time initialization code goes here\n      console.log(&#39;bootstrapped!&#39;)\n    });\n}</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"挂载\" style=\"position:relative;\"><a href=\"#%E6%8C%82%E8%BD%BD\" aria-label=\"挂载 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>挂载</h3>\n<p class=\"para\">每当应用的<a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\" class=\"link-underline\">activity function</a>返回真值，但该应用处于未挂载状态时，挂载的生命周期函数就会被调用。调用时，函数会根据URL来确定当前被激活的路由，创建DOM元素、监听DOM事件等以向用户呈现渲染的内容。任何子路由的改变（如<code>hashchange</code>或<code>popstate</code>等）不会再次触发<code>mount</code>，需要各应用自行处理。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">\nexport function mount(props) {\n  return Promise\n    .resolve()\n    .then(() =&gt; {\n      // Do framework UI rendering here\n      console.log(&#39;mounted!&#39;)\n    });\n}</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"卸载\" style=\"position:relative;\"><a href=\"#%E5%8D%B8%E8%BD%BD\" aria-label=\"卸载 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>卸载</h3>\n<p class=\"para\">每当应用的<a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\" class=\"link-underline\">activity function</a>返回假值，但该应用已挂载时，卸载的生命周期函数就会被调用。卸载函数被调用时，会清理在挂载应用时被创建的DOM元素、事件监听、内存、全局变量和消息订阅等。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">export function unmount(props) {\n  return Promise\n    .resolve()\n    .then(() =&gt; {\n      // Do framework UI unrendering here\n      console.log(&#39;unmounted!&#39;);\n    });\n}</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"移除\" style=\"position:relative;\"><a href=\"#%E7%A7%BB%E9%99%A4\" aria-label=\"移除 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>移除</h3>\n<p class=\"para\">“移除”生命周期函数的实现是可选的，它只有在<a href=\"api.md#unloadapplication\" class=\"link-underline\">unloadApplication</a>被调用时才会触发。如果一个已注册的应用没有实现这个生命周期函数，则假设这个应用无需被移除。\n移除的目的是各应用在移除之前执行部分逻辑，一旦应用被移除，它的状态将会变成NOT_LOADED，下次激活时会被重新初始化。\n移除函数的设计动机是对所有注册的应用实现“热下载”，不过在其他场景中也非常有用，比如想要重新初始化一个应用，且在重新初始化之前执行一些逻辑操作时。</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">export function unload(props) {\n  return Promise\n    .resolve()\n    .then(() =&gt; {\n      // Hot-reloading implementation goes here\n      console.log(&#39;unloaded!&#39;);\n    });\n}</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"超时\" style=\"position:relative;\"><a href=\"#%E8%B6%85%E6%97%B6\" aria-label=\"超时 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>超时</h3>\n<p class=\"para\">默认情况下，所有注册的应用遵循<a href=\"/docs/api#setbootstrapmaxtime\" class=\"link-underline\">全局超时配置</a>，但对于每个应用，也可以通过在主入口文件导出一个<code>timeouts</code>对象来重新定义超时时间。如：</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">// app-1.main-entry.js\nexport function bootstrap(props) {...}\nexport function mount(props) {...}\nexport function unmount(props) {...}\nexport const timeouts = {\n  bootstrap: {\n    millis: 5000,\n    dieOnTimeout: true,\n    warningMillis: 2500,\n  },\n  mount: {\n    millis: 5000,\n    dieOnTimeout: false,\n    warningMillis: 2500,\n  },\n  unmount: {\n    millis: 5000,\n    dieOnTimeout: true,\n    warningMillis: 2500,\n  },\n  unload: {\n    millis: 5000,\n    dieOnTimeout: true,\n    warningMillis: 2500,\n  },\n};</code>\n        </deckgo-highlight-code>\n<blockquote class=\"quote\">\n<p class=\"para\">注意<code>millis</code>指的是最终控制台输出警告的毫秒数，<code>warningMillis</code>指的是将警告打印到控制台(间隔)的毫秒数。</p>\n</blockquote>\n<h2 class=\"heading subtitle heading\" id=\"使用single-spa生态快速接入\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8single-spa%E7%94%9F%E6%80%81%E5%BF%AB%E9%80%9F%E6%8E%A5%E5%85%A5\" aria-label=\"使用single spa生态快速接入 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用single-spa生态快速接入</h2>\n<p class=\"para\">single-spa官方团队针对不同流行框架创建了一些项目，帮助开发者使用自己选择的框架来创建single-spa应用。这里以React为例。</p>\n<p class=\"para\">官方提供了<a href=\"https://github.com/single-spa/single-spa-react\" class=\"link-underline\">single-spa-react</a>，为React应用提供了生命周期钩子。</p>\n<p class=\"para\">来看一下案例，singleSpaReact最后返回的包含各生命周期函数的对象：</p>\n<deckgo-highlight-code language=\"js\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">import React from &#39;react&#39;;\nimport ReactDOM from &#39;react-dom&#39;;\nimport rootComponent from &#39;./path-to-root-component.js&#39;;\n// Note that SingleSpaContext is a react@16.3 (if available) context that provides the singleSpa props\nimport singleSpaReact, {SingleSpaContext} from &#39;single-spa-react&#39;;\n\nconst reactLifecycles = singleSpaReact({\n  React,\n  ReactDOM,\n  rootComponent,\n  errorBoundary(err, info, props) {\n    // https://reactjs.org/docs/error-boundaries.html\n    return (\n      &lt;div&gt;This renders when a catastrophic error occurs&lt;/div&gt;\n    );\n  },\n});\n\nexport const bootstrap = reactLifecycles.bootstrap;\nexport const mount = reactLifecycles.mount;\nexport const unmount = reactLifecycles.unmount;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">single-spa-react的源码不难，主要包括参数处理，和针对React框架的一些特点和语法实现了DOM的创建和插入，这里就不做过多分析，有兴趣的朋友可以自行阅读。</p>\n<h2 class=\"heading subtitle heading\" id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h2>\n<ol>\n<li><a href=\"https://single-spa.js.org/docs/building-applications\" class=\"link-underline\">single-spa building-applications</a></li>\n<li><a href=\"https://single-spa.js.org/docs/configuration\" class=\"link-underline\">COnfiguring single-spa</a></li>\n</ol>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA-html-%E6%96%87%E4%BB%B6\">创建一个 html 文件</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAsingle-spa-config\">创建一个single-spa-config。</a></p>\n<ul>\n<li>\n<p><a href=\"#%E5%8F%82%E6%95%B0\">参数</a></p>\n<ul>\n<li>\n<p><a href=\"#name\">name</a></p>\n</li>\n<li>\n<p><a href=\"#loading-function-or-application\">Loading Function or Application</a></p>\n<ul>\n<li><a href=\"#application-as-second-argument\">Application as second argument</a></li>\n<li><a href=\"#%E5%8A%A0%E8%BD%BD%E5%87%BD%E6%95%B0\">加载函数</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\">激活函数</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7\">自定义属性</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E5%8F%82%E6%95%B0\">使用对象参数</a></p>\n<ul>\n<li><a href=\"#configname\">config.name</a></li>\n<li><a href=\"#configapp\">config.app</a></li>\n<li><a href=\"#configactivewhen\">config.activeWhen</a></li>\n<li><a href=\"#path-prefix\">Path prefix</a></li>\n<li><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7-1\">自定义属性</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E8%B0%83%E7%94%A8-singlespastart\">调用 singleSpa.start()</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\">创建一个应用程序。</a></p>\n<ul>\n<li>\n<p><a href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%8F%82%E6%95%B0\">生命周期参数</a></p>\n<ul>\n<li><a href=\"#%E5%86%85%E7%BD%AE%E5%8F%82%E6%95%B0\">内置参数</a></li>\n<li><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0\">自定义参数</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E4%B8%8B%E8%BD%BDload\">下载(load)</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96\">初始化</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%8C%82%E8%BD%BD\">挂载</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%8D%B8%E8%BD%BD\">卸载</a></p>\n</li>\n<li>\n<p><a href=\"#%E7%A7%BB%E9%99%A4\">移除</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%B6%85%E6%97%B6\">超时</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E4%BD%BF%E7%94%A8single-spa%E7%94%9F%E6%80%81%E5%BF%AB%E9%80%9F%E6%8E%A5%E5%85%A5\">使用single-spa生态快速接入</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%8F%82%E8%80%83\">参考</a></p>\n</li>\n</ul>","headings":[{"id":"创建一个-html-文件","depth":2,"value":"创建一个 html 文件"},{"id":"创建一个single-spa-config","depth":2,"value":"创建一个single-spa-config。"},{"id":"参数","depth":3,"value":"参数"},{"id":"name","depth":4,"value":"name"},{"id":"Loading-Function-or-Application","depth":4,"value":"Loading Function or Application"},{"id":"Application-as-second-argument","depth":5,"value":"Application as second argument"},{"id":"加载函数","depth":5,"value":"加载函数"},{"id":"激活函数","depth":4,"value":"激活函数"},{"id":"自定义属性","depth":4,"value":"自定义属性"},{"id":"使用对象参数","depth":3,"value":"使用对象参数"},{"id":"configname","depth":4,"value":"config.name"},{"id":"configapp","depth":4,"value":"config.app"},{"id":"configactiveWhen","depth":4,"value":"config.activeWhen"},{"id":"Path-prefix","depth":4,"value":"Path prefix"},{"id":"自定义属性-1","depth":4,"value":"自定义属性"},{"id":"调用-singleSpastart","depth":2,"value":"调用 singleSpa.start()"},{"id":"创建一个应用程序","depth":2,"value":"创建一个应用程序。"},{"id":"生命周期参数","depth":3,"value":"生命周期参数"},{"id":"内置参数","depth":4,"value":"内置参数"},{"id":"自定义参数","depth":4,"value":"自定义参数"},{"id":"下载load","depth":3,"value":"下载(load)"},{"id":"初始化","depth":3,"value":"初始化"},{"id":"挂载","depth":3,"value":"挂载"},{"id":"卸载","depth":3,"value":"卸载"},{"id":"移除","depth":3,"value":"移除"},{"id":"超时","depth":3,"value":"超时"},{"id":"使用single-spa生态快速接入","depth":2,"value":"使用single-spa生态快速接入"},{"id":"参考","depth":2,"value":"参考"}],"frontmatter":{"title":"如何在项目中接入single-spa","date":"2020-11-28","cover":null,"description":null,"categories":["技术研究"],"tags":[]}},"previous":{"fields":{"slug":"/blogs/2020-12-14-随机的联想/"},"frontmatter":{"title":"关于JavaScript的随机数"}},"next":{"fields":{"slug":"/blogs/2020-11-21-single-spa源码解析-registerApplication和start/"},"frontmatter":{"title":"single-spa源码解析-registerApplication和start","tags":[],"categories":["技术研究"],"status":null}}},"pageContext":{"id":"d0f0ca39-1cce-5939-a405-e41f8619403c","previousPostId":"652f97f3-e58b-5d3c-9e08-6a8d2599b0e2","nextPostId":"7a8b3efd-b9ba-543d-a533-e4b1747b9341"}},
    "staticQueryHashes": ["2841359383"]}