{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blogs/git使用笔记(二)-撤销操作/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"a4ceb0d6-3e7f-5ab0-b636-c6df117ed976","html":"<p class=\"para\">在最近使用 git 的过程中，有时候遇到这样的一个问题：习惯性的 “add -A”，这会将所有的修改都添加到暂存区，可是有两个文件的修改暂时不想添加的呀，这该怎么办？git 提供了一些撤销操作的方法。比如：</p>\n<h3 class=\"heading\" id=\"取消已经暂存的修改\" style=\"position:relative;\"><a href=\"#%E5%8F%96%E6%B6%88%E5%B7%B2%E7%BB%8F%E6%9A%82%E5%AD%98%E7%9A%84%E4%BF%AE%E6%94%B9\" aria-label=\"取消已经暂存的修改 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>取消已经暂存的修改</h3>\n<p class=\"para\">就像前面说的，习惯性的 “add -A” 将暂时不想添加的修改添加到了暂存区。而取消已经暂存的修改的方法，git 已经在你每次使用 <code>git status</code> 查看文件状态的时候给出了解决方案，</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">➜  hexo-theme git:(master) ✗ git status\r\nOn branch master\r\nYour branch is ahead of &#39;origin/master&#39; by 2 commits.\r\n  (use &quot;git push&quot; to publish your local commits)\r\n\r\nChanges to be committed:\r\n  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)\r\n\r\n    modified:   processing/README.md\r\n    modified:   processing/layout/_partial/navigation.jade\r\n    modified:   processing/layout/_widget/archive.jade\r\n    modified:   processing/layout/_widget/categories.jade\r\n    modified:   processing/source/css/_base/base.scss\r\n    modified:   processing/source/css/_base/variables.scss\r\n    modified:   processing/source/css/_partial/navigation.scss\r\n    modified:   processing/source/css/style.scss</code>\n        </deckgo-highlight-code>\n<p class=\"para\">可以使用 git reset HEAD <file>… 的方式取消暂存。</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">➜  hexo-theme git:(master) ✗ git reset HEAD *\r\nUnstaged changes after reset:\r\nM\tprocessing/README.md\r\nM\tprocessing/layout/_partial/navigation.jade\r\nM\tprocessing/layout/_widget/archive.jade\r\nM\tprocessing/layout/_widget/categories.jade\r\nM\tprocessing/source/css/_base/base.scss\r\nM\tprocessing/source/css/_base/variables.scss\r\nM\tprocessing/source/css/_partial/navigation.scss\r\nM\tprocessing/source/css/style.scss</code>\n        </deckgo-highlight-code>\n<p class=\"para\">这时再使用 <code>git status</code> 查看文件状态可以看到</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">➜  hexo-theme git:(master) ✗ git status\r\nOn branch master\r\nYour branch is ahead of &#39;origin/master&#39; by 2 commits.\r\n  (use &quot;git push&quot; to publish your local commits)\r\n\r\nChanges not staged for commit:\r\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\r\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\r\n\r\n  modified:   processing/README.md\r\n  modified:   processing/layout/_partial/navigation.jade\r\n  modified:   processing/layout/_widget/archive.jade\r\n  modified:   processing/layout/_widget/categories.jade\r\n  modified:   processing/source/css/_base/base.scss\r\n  modified:   processing/source/css/_base/variables.scss\r\n  modified:   processing/source/css/_partial/navigation.scss\r\n  modified:   processing/source/css/style.scss\r\n\r\nno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code>\n        </deckgo-highlight-code>\n<p class=\"para\">可以看到，现在所有的修改都没有被暂存。</p>\n<h3 class=\"heading\" id=\"取消对文件的修改\" style=\"position:relative;\"><a href=\"#%E5%8F%96%E6%B6%88%E5%AF%B9%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%AE%E6%94%B9\" aria-label=\"取消对文件的修改 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>取消对文件的修改</h3>\n<p class=\"para\">有一次，我正修复一个bug，修改本地仓库的一个文件，还没有完成时，同伴告诉我他已经修改好了，并且已经提交到远程了。我停下手头的工作，准备 pull ，这时候意识到，如果直接 pull，merge 的时候必然会冲突，因为我和同事同时修改了同一个文件的差不多相同的地方。但是我自己修改了文件很多地方，一味的 CTRL+Z 也难以解决问题，此时我需要将我修改的文件返回到修改之前的状态。很凑巧的是，在执行 <code>git status</code> 时，同样也给出了具体的撤销方法。</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">➜  hexo-theme git:(master) git status\r\nOn branch master\r\nYour branch is up-to-date with &#39;origin/master&#39;.\r\n\r\nChanges not staged for commit:\r\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\r\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\r\n\r\n  modified:   processing/layout/_widget/archive.jade\r\n  modified:   processing/layout/_widget/categories.jade\r\n  modified:   processing/layout/_widget/tags.jade\r\n  modified:   processing/layout/layout.jade\r\n  modified:   processing/source/css/_base/base.scss\r\n\r\nno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code>\n        </deckgo-highlight-code>\n<p class=\"para\">使用 <code>git checkout -- &#x3C;filename></code> 来取消工作目录中的修改。</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">➜  hexo-theme git:(master) ✗ git checkout -- *\r\n➜  hexo-theme git:(master) git status\r\nOn branch master\r\nYour branch is up-to-date with &#39;origin/master&#39;.\r\n\r\nnothing to commit, working directory clean</code>\n        </deckgo-highlight-code>\n<p class=\"para\">效果显而易见！！这条命令有些危险，所有对文件的修改都没有了。如果一个不小心将自己需要的修改 discard 了，那就只有哭了……</p>\n<h3 class=\"heading\" id=\"修改最后一次的提交\" style=\"position:relative;\"><a href=\"#%E4%BF%AE%E6%94%B9%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4\" aria-label=\"修改最后一次的提交 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>修改最后一次的提交</h3>\n<p class=\"para\">有时候在提交时，发现自己漏掉或者多选了几个文件，亦或者提交信息写错了，想要撤销刚才的提交操作，可以使用 <code>--amend</code> 这个选项，重新提交</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">➜  hexo-theme git:(master) ✗ git add -A\r\n➜  hexo-theme git:(master) ✗ git commit -m &quot;commit wrong&quot;\r\n[master ebcbab2] commit wrong\r\n  4 files changed, 78 insertions(+), 106 deletions(-)\r\n  rewrite processing/source/css/_base/base.scss (64%)</code>\n        </deckgo-highlight-code>\n<p class=\"para\">发现自己提交了一个 “commit wrong” 的错误提交信息，也不用太紧张，输入指令</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">git commit --amend</code>\n        </deckgo-highlight-code>\n<p class=\"para\">之后，会跳转到命令行中的 vim 中，提示你修改提交信息。只要没有推送到远程端，一切都好说～</p>","tableOfContents":"<ul>\n<li><a href=\"#%E5%8F%96%E6%B6%88%E5%B7%B2%E7%BB%8F%E6%9A%82%E5%AD%98%E7%9A%84%E4%BF%AE%E6%94%B9\">取消已经暂存的修改</a></li>\n<li><a href=\"#%E5%8F%96%E6%B6%88%E5%AF%B9%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%AE%E6%94%B9\">取消对文件的修改</a></li>\n<li><a href=\"#%E4%BF%AE%E6%94%B9%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4\">修改最后一次的提交</a></li>\n</ul>","headings":[{"id":"取消已经暂存的修改","depth":3,"value":"取消已经暂存的修改"},{"id":"取消对文件的修改","depth":3,"value":"取消对文件的修改"},{"id":"修改最后一次的提交","depth":3,"value":"修改最后一次的提交"}],"frontmatter":{"title":"git 使用笔记(二)-撤销操作","date":"2014-07-22","cover":null,"description":null,"categories":[],"tags":["Git","笔记"]}},"previous":{"fields":{"slug":"/blogs/grunt的简单配置和使用/"},"frontmatter":{"title":"Grunt的简单配置和使用"}},"next":{"fields":{"slug":"/blogs/踩坑日记-ie下a标签的虚线框/"},"frontmatter":{"title":"踩坑日记-IE下 A 标签的虚线框和必须要会用的 CSS 选择器","tags":["CSS","笔记","兼容性","填坑日记"],"categories":[],"status":null}}},"pageContext":{"id":"a4ceb0d6-3e7f-5ab0-b636-c6df117ed976","previousPostId":"b6f9fd59-b824-5327-b39d-cb590fcd76ad","nextPostId":"99f79f48-120a-59b5-b2a8-010c64019001"}},
    "staticQueryHashes": ["2841359383"]}