{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blogs/定时将图片保存在SAE的Storage中/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"52b2af54-ff9d-5821-b562-9e9feb09b9e0","html":"<blockquote class=\"quote\">\n<p class=\"para\">前几天一直在看Node相关的书，做了一些笔记，挂在自己的博客上。挺累的，毕竟看的是两本英文的书。而且疲了，一时间学的太猛，以至于晕头转向的。Node中我觉得有一个很麻烦的问题就是：包太多，更新速度也是参差不齐，有的一直在维护，有的已经很长时间不变化，太乱了。光一个MySQL的模块就好多好多好多个。怎么说呢，感觉模块什么的都不太需要太在意，重要的是理解Node的一些本质，虽然我现在还不清楚有些什么很重要的本质，总之慢慢来吧。</p>\n</blockquote>\n<blockquote class=\"quote\">\n<p class=\"para\">反观python，虽然我只是也业余的python玩家，但是我也看出来了，python的很多套路都比较稳定，做起来的话踩的坑比较少，对于想我这种渴望从代码中找到成就感的屌丝来说还是很不错的。所以歇了两天之后能开始玩python</p>\n</blockquote>\n<p class=\"para\">之前尝试用python来做一个网站，网站干嘛的我自己也不清楚，只想借机多了解一点后端的技术。然后我决定利用知乎日报的数据来给自己做一个“纸糊日报”。其他的什么就先不说了，之前做的时候，没有掌握Evernote的使用技巧，也就没有想着做笔记。不过现在不一样了，我有特殊的做笔记技巧。</p>\n<h2 class=\"heading subtitle heading\" id=\"问题来了在本地开发保存图片的尴尬\" style=\"position:relative;\"><a href=\"#%E9%97%AE%E9%A2%98%E6%9D%A5%E4%BA%86%E5%9C%A8%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E7%9A%84%E5%B0%B4%E5%B0%AC\" aria-label=\"问题来了在本地开发保存图片的尴尬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题来了：在本地开发，保存图片的尴尬</h2>\n<p class=\"para\">原本只是利用webpy自带的小小服务器在本地开发，但是遇到一个问题就是，抓到图片原始路径之后，没办法直接在页面上使用，因为没有权限在知乎以外的站点使用。然后我也不知道怎么解决这种问题啊，当时为了能早点看到效果，写了一个脚本把图片保存到一个指定的路径，再从这个地方引用。</p>\n<p class=\"para\">那么问题来了，每过一天，打开电脑之后，我都要单独地手动地执行一次脚本，我很蛋疼！！更重要的是，如果我放到线上之后，还要把所有的图片都传上去嘛！！</p>\n<h2 class=\"heading subtitle heading\" id=\"转机本地和SAE线上同步开发\" style=\"position:relative;\"><a href=\"#%E8%BD%AC%E6%9C%BA%E6%9C%AC%E5%9C%B0%E5%92%8CSAE%E7%BA%BF%E4%B8%8A%E5%90%8C%E6%AD%A5%E5%BC%80%E5%8F%91\" aria-label=\"转机本地和SAE线上同步开发 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>转机：本地和SAE线上同步开发</h2>\n<p class=\"para\">然后我也没有什么好办法，就荒废下去了。昨天呢，突然意识到，发布到线上我也只有放在SAE啊，毕竟穷屌丝……。SAE支持Python开发，可以使用webpy这一小巧的框架；提供MySQL和Storage服务，Stroage最少都有10G的容量，这应该够了吧。\r\n所以安排如下：</p>\n<ul>\n<li>将本地的代码，转移到SAE上</li>\n<li>将图片保存到Stroage中而不是代码目录里</li>\n<li>日后可能使用MySQL服务</li>\n</ul>\n<h3 class=\"heading\" id=\"构建SAE中webpy的本地开发\" style=\"position:relative;\"><a href=\"#%E6%9E%84%E5%BB%BASAE%E4%B8%ADwebpy%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91\" aria-label=\"构建SAE中webpy的本地开发 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>构建SAE中webpy的本地开发</h3>\n<p class=\"para\">webpy在本地运行和在SAE中运行有点不同，</p>\n<deckgo-highlight-code language=\"python\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\"># 本地\r\napp = web.application(urls, globals())\r\nif __name__ == &quot;__main__&quot;:\r\n    app.run()\r\n\r\n\r\n# SAE\r\napp = web.application(urls, globals()).wsgifunc()\r\napplication = sae.create_wsgi_app(app)</code>\n        </deckgo-highlight-code>\n<p class=\"para\">将两者合并，我们得到一个既可以直接在本地运行，又可以直接在SAE运行的代码：</p>\n<deckgo-highlight-code language=\"python\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">app = web.application(urls, globals())\r\nif __name__ == &quot;__main__&quot;:\r\n    app.run()\r\nelse:\r\n    import sae\r\n    application = sae.create_wsgi_app(app.wsgifunc())\r\n</code>\n        </deckgo-highlight-code>\n<p class=\"para\">SAE上的Python应用的入口为 <code>index.wsgi:application</code> ，也就是 <code>index.wsgi</code> 这个文件中名为 <code>application</code> 的对象。</p>\n<p class=\"para\">在本地，我可以运用<code>code.py</code>，但是在SAE上的入口是<code>index.wsgi</code>。在<a href=\"http://www.liaoxuefeng.com/article/00137389260145256f699d538ae4fd3910be06d2753b192000\" class=\"link-underline\">这篇博客</a>上看到了解决方案，菜鸟表示，不太明白怎么回事，我还是先乖乖拷贝吧。</p>\n<h3 class=\"heading\" id=\"将图片存至Storage\" style=\"position:relative;\"><a href=\"#%E5%B0%86%E5%9B%BE%E7%89%87%E5%AD%98%E8%87%B3Storage\" aria-label=\"将图片存至Storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将图片存至Storage</h3>\n<p class=\"para\">图片的抓取就不多说了。假设已经拿到了图片的地址<code>http://pic4.zhimg.com/e80a34cf13d590dea72ad5e1dfb66bac.jpg</code>。</p>\n<p class=\"para\">SAE提供了Storage的使用帮助文档，<a href=\"http://sae.sina.com.cn/doc/python/storage.html#module-sae.storage\" class=\"link-underline\">这里是Python的文档</a>，简单明了。</p>\n<p class=\"para\">所以我的代码是酱紫的：</p>\n<deckgo-highlight-code language=\"python\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">def saveimagetostorage(url):\r\n    # 去掉 ‘http://’\r\n    file_path = url[6:]\r\n    # 文件夹\r\n    dir_path = re.match(r&#39;/\\w+(\\.\\w+){0,}\\/&#39;, file_path).group(0)\r\n    # 获取文件名\r\n    file_name = file_path[len(dir_path):]\r\n\r\n    if &#39;SERVER_SOFTWARE&#39; in os.environ:\r\n        # import sae\r\n        from sae.storage import Bucket\r\n        bucket = Bucket(&quot;zhihudaily&quot;)\r\n        # 存取一个文件到bucket中\r\n        fr = urllib.urlopen(url)\r\n        stream = fr.read()\r\n        bucket.put_object(dir_path[1:]+file_name, stream)\r\n        return bucket\r\n\r\n    else:\r\n        mkdir(save_path)\r\n        print file_path\r\n        print &#39;&gt;&gt;&gt;&gt;&#39;\r\n        print url\r\n        urllib.urlretrieve(url, imagePath + file_path)\r\n        return &quot;LocalHost&quot;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">核心代码就是这些：</p>\n<deckgo-highlight-code language=\"python\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">from sae.storage import Bucket\r\nbucket = Bucket(&quot;storage的名字&quot;)\r\nfr = urllib.urlopen(url)\r\nstream = fr.read()\r\nbucket.put_object(dir_path[1:]+file_name, stream)</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"如何定时\" style=\"position:relative;\"><a href=\"#%E5%A6%82%E4%BD%95%E5%AE%9A%E6%97%B6\" aria-label=\"如何定时 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何定时？</h3>\n<p class=\"para\">SAE提供了<a href=\"http://zh.wikipedia.org/wiki/Cron\" class=\"link-underline\">Cron(wiki)</a>服务，SAE的相关文档在<a href=\"http://sae.sina.com.cn/doc/php/cron.html\" class=\"link-underline\">这里</a>。这个Cron就是用来设置周期性被执行的指令的。之前每次都是手动的执行脚本来保存图片，麻烦的要死，既然已经可以图片存到SAE上了，何不再利用SAE提供的便利服务来定时执行保存的操作呢？</p>\n<blockquote class=\"quote\">\n<p class=\"para\">Cron服务是SAE为开发者提供的分布式计划任务服务，用来定时触发开发者的特定动作，满足比如定时计算排行榜等需求。</p>\n</blockquote>\n<blockquote class=\"quote\">\n<p class=\"para\">Cron的执行是以HTTP方式触发的，触发后真正执行的是用户在应用的HTTP的回调函数。Cron服务是分布式环境部署的，具有高可靠性，多点之间相互隔离且同时触发，并且通过分布式锁进行选举并最终由一个健康节点执行。</p>\n</blockquote>\n<p class=\"para\">Cron的应用场景主要是让用户可以在指定的时间执行一些计划任务。</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">* 每隔一定时间执行，如每隔2个小时执行1次。\r\n* 在某个特定时间点执行，如每周二晚上9:10执行。</code>\n        </deckgo-highlight-code>\n<p class=\"para\">我可以在应用的配置文件 <code>config.yaml</code> 中来添加Cron。例如：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">name: crontest\r\nversion: 1\r\ncron:\r\n- description: cron_test\r\n  url: /cron/make\r\n  schedule: &quot;*/5 * * * *&quot;</code>\n        </deckgo-highlight-code>\n<p class=\"para\">添加了一个Cron任务， 该任务每5分钟执行 <a href=\"http://crontest.sinaapp.com/cron/make\" class=\"link-underline\">http://crontest.sinaapp.com/cron/make</a> 一次。具体如何配置可以文档给出的<a href=\"http://sae.sina.com.cn/doc/php/cron.html#id3\" class=\"link-underline\">例子</a></p>\n<p class=\"para\">在我的代码中，我设置的是每一个小时抓取一次图片，所以是酱紫的：</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">name: daily\r\nversion: 1\r\ncron:\r\n- description: daily\r\n  url: /api/save_image\r\n  schedule: &quot;0 */1 * * *&quot;</code>\n        </deckgo-highlight-code>\n<p class=\"para\"><strong>注意:Cron使用HTTP GET方式请求URL</strong></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E9%97%AE%E9%A2%98%E6%9D%A5%E4%BA%86%E5%9C%A8%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E7%9A%84%E5%B0%B4%E5%B0%AC\">问题来了：在本地开发，保存图片的尴尬</a></p>\n</li>\n<li>\n<p><a href=\"#%E8%BD%AC%E6%9C%BA%E6%9C%AC%E5%9C%B0%E5%92%8Csae%E7%BA%BF%E4%B8%8A%E5%90%8C%E6%AD%A5%E5%BC%80%E5%8F%91\">转机：本地和SAE线上同步开发</a></p>\n<ul>\n<li><a href=\"#%E6%9E%84%E5%BB%BAsae%E4%B8%ADwebpy%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91\">构建SAE中webpy的本地开发</a></li>\n<li><a href=\"#%E5%B0%86%E5%9B%BE%E7%89%87%E5%AD%98%E8%87%B3storage\">将图片存至Storage</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%AE%9A%E6%97%B6\">如何定时？</a></li>\n</ul>\n</li>\n</ul>","headings":[{"id":"问题来了在本地开发保存图片的尴尬","depth":2,"value":"问题来了：在本地开发，保存图片的尴尬"},{"id":"转机本地和SAE线上同步开发","depth":2,"value":"转机：本地和SAE线上同步开发"},{"id":"构建SAE中webpy的本地开发","depth":3,"value":"构建SAE中webpy的本地开发"},{"id":"将图片存至Storage","depth":3,"value":"将图片存至Storage"},{"id":"如何定时","depth":3,"value":"如何定时？"}],"frontmatter":{"title":"定时将图片保存在SAE的Storage中","date":"2014-11-10","cover":null,"description":null,"categories":["Python"],"tags":["webpy","Python"]}},"previous":{"fields":{"slug":"/blogs/规范之路-行高的工作原理/"},"frontmatter":{"title":"规范之路-line-height的工作原理"}},"next":{"fields":{"slug":"/blogs/Node学习笔记-Wrangling the File System/"},"frontmatter":{"title":"Node学习笔记-Wrangling the File System","tags":["笔记","Node.js"],"categories":["Node.js"],"status":null}}},"pageContext":{"id":"52b2af54-ff9d-5821-b562-9e9feb09b9e0","previousPostId":"1a9d7d18-602e-527e-b9b0-623914e6049b","nextPostId":"d757b860-334b-547e-9fb8-66da22479a1e"}},
    "staticQueryHashes": ["2841359383"]}