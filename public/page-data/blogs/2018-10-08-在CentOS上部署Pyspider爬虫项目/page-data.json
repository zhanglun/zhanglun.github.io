{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/blogs/2018-10-08-在CentOS上部署Pyspider爬虫项目/",
    "result": {"data":{"site":{"siteMetadata":{"title":"张小伦的网络日志","description":"欢迎来到张小伦的网络日志 \n\t\t一个记录生活，分享心得的博客","menu":[{"id":"home","name":"首页","url":"/"},{"id":"blog","name":"博文","url":"/blogs"},{"id":"category","name":"分类","url":"/categories"},{"id":"archive","name":"归档","url":"/archives"},{"id":"lab","name":"实验室","url":"/labs"},{"id":"about","name":"关于我","url":"/about"}]}},"markdownRemark":{"id":"23a1881a-4b13-5f29-bc5a-1c94ce4c92e9","html":"<h2 class=\"heading subtitle heading\" id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p class=\"para\">之前在腾讯云的云主机中，部署了一个pyspider爬虫项目，专门爬链家上的二手房信息。前段时间云主机被我玩坏了，重装了一次，需要重新在部署一次。之前没有记录下具体的过程，无奈只能搜索资料重来一次。乘着这次机会，在此记录下 CentOS 上 Pyspider 爬虫项目的部署过程。以后还是需要多做笔记，整理学习</p>\n<!--more-->\n<h2 class=\"heading subtitle heading\" id=\"安装-Python3\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85-Python3\" aria-label=\"安装 Python3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 Python3</h2>\n<p class=\"para\">在部署pyspider项目之前，需要安装Python，虽然系统自带Python2.7.5，但是我选择使用Python3。Python3的安装过程十分简单，在我之前的文章：<a href=\"https://zhanglun.github.io/2018/03/09/%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/\" class=\"link-underline\">个人服务器常用基础配置</a> 中提到过。在这里重新记录一次</p>\n<h3 class=\"heading\" id=\"源码安装\" style=\"position:relative;\"><a href=\"#%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85\" aria-label=\"源码安装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>源码安装</h3>\n<p class=\"para\">在安装之前，有几个依赖工具需要提前装好。</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">$ yum install gcc zlib-devel</code>\n        </deckgo-highlight-code>\n<p class=\"para\">接下来时下载源码、编译安装。</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">$ wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz -O python3.7.0.tar.xz\n$ tar xJf python3.7.0tar.xz\n$ cd python3.7.0tar.xz\n$ ./configure\n\n// 因为我使用的是 fish-shell。其实就是 bash 中的 `make &amp;&amp; make install`\n$ make; and  make install\n\n// 检查安装结果。输出 `/usr/local/bin/python3`\n$ which python3</code>\n        </deckgo-highlight-code>\n<h3 class=\"heading\" id=\"使用-pyenv-安装\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-pyenv-%E5%AE%89%E8%A3%85\" aria-label=\"使用 pyenv 安装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 pyenv 安装</h3>\n<p class=\"para\">有时多个python版本还是希望用pyenv隔离下，避免不同版本库间的影响干扰。有时为了避免固有bug的影响，希望从零开始安装一个纯净的环境，pyenv就可以发挥作用了。</p>\n<h4 class=\"heading\" id=\"安装依赖的库文件\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E7%9A%84%E5%BA%93%E6%96%87%E4%BB%B6\" aria-label=\"安装依赖的库文件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装依赖的库文件</h4>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</code>\n        </deckgo-highlight-code>\n<h4 class=\"heading\" id=\"安装-pyenv\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85-pyenv\" aria-label=\"安装 pyenv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 pyenv</h4>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">git clone git://github.com/yyuu/pyenv.git ~/.pyenv\necho &#39;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#39; &gt;&gt; ~/.bashrc\necho &#39;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#39; &gt;&gt; ~/.bashrc\necho &#39;eval &quot;$(pyenv init -)&quot;&#39; &gt;&gt; ~/.bashrc\nexec $SHELL -l</code>\n        </deckgo-highlight-code>\n<h4 class=\"heading\" id=\"简单使用\" style=\"position:relative;\"><a href=\"#%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8\" aria-label=\"简单使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>简单使用</h4>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">#查看当前版本\npyenv version\n\n# 查看所有版本\npyenv versions\n\n# 查看所有可安装的版本\npyenv install --list\n\n# 安装指定版本\npyenv install 3.6.5\n# 安装新版本后rehash一下\npyenv rehash\n\n# 删除指定版本\npyenv uninstall 3.5.2\n\n# 指定全局版本\npyenv global 3.6.5\n\n# 指定多个全局版本, 3版本优先\npyenv global 3.6.5 2.7.14\n\n# 实际上当你切换版本后, 相应的pip和包仓库都是会自动切换过去的</code>\n        </deckgo-highlight-code>\n<h4 class=\"heading\" id=\"使用Pyenv安装python\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8Pyenv%E5%AE%89%E8%A3%85python\" aria-label=\"使用Pyenv安装python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用Pyenv安装python</h4>\n<p class=\"para\">如果你试图通过pyenv安装python版本，不出意外的话一定会失败。解决方案很简单：</p>\n<ol>\n<li>pyenv搜狐镜像源加速：<a href=\"http://mirrors.sohu.com/python/\" class=\"link-underline\">http://mirrors.sohu.com/python/</a></li>\n<li>下载需要的版本放到~/.pyenv/cache文件夹下面</li>\n<li>然后执行 pyenv install 版本号 安装对应的python版本</li>\n</ol>\n<p class=\"para\">简化为一条命令：</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">v=3.6.5;wget http://mirrors.sohu.com/python/$v/Python-$v.tar.xz -P ~/.pyenv/cache/;pyenv install $v  </code>\n        </deckgo-highlight-code>\n<p class=\"para\">然后通过 <code>pyenv global 3.6.5</code> 设置当前python版本，再 <code>pyenv rehash</code> 即可。此时<code>python</code>和<code>pip</code>都是python3对应的版本</p>\n<p class=\"para\">通过修改pip的镜像源加速python包的下载。创建或者修改以下文件 ~/.pip/pip.conf 写入以下文件内容</p>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">[global]\nindex-url = http://mirrors.aliyun.com/pypi/simple\n[install]\ntrusted-host = mirrors.aliyun.com</code>\n        </deckgo-highlight-code>\n<p class=\"para\">这样在使用pip来安装时，会默认调用该镜像。</p>\n<h2 class=\"heading subtitle heading\" id=\"安装-pyspider\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85-pyspider\" aria-label=\"安装 pyspider permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 pyspider</h2>\n<deckgo-highlight-code language=\"bash\" theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">pip install pyspider</code>\n        </deckgo-highlight-code>\n<p class=\"para\">关于 pyspider的使用在此不在复述，网上有很多教程。个人在使用过程中，增加了一个配置文件，最终通过一下命令启动</p>\n<deckgo-highlight-code  theme=\"one-dark\" line-numbers=\"true\"  >\n          <code slot=\"code\">nohup pyspider -c config.json&amp;</code>\n        </deckgo-highlight-code>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AE%89%E8%A3%85-python3\">安装 Python3</a></p>\n<ul>\n<li>\n<p><a href=\"#%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85\">源码安装</a></p>\n</li>\n<li>\n<p><a href=\"#%E4%BD%BF%E7%94%A8-pyenv-%E5%AE%89%E8%A3%85\">使用 pyenv 安装</a></p>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E7%9A%84%E5%BA%93%E6%96%87%E4%BB%B6\">安装依赖的库文件</a></li>\n<li><a href=\"#%E5%AE%89%E8%A3%85-pyenv\">安装 pyenv</a></li>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8\">简单使用</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8pyenv%E5%AE%89%E8%A3%85python\">使用Pyenv安装python</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%AE%89%E8%A3%85-pyspider\">安装 pyspider</a></p>\n</li>\n</ul>","headings":[{"id":"前言","depth":2,"value":"前言"},{"id":"安装-Python3","depth":2,"value":"安装 Python3"},{"id":"源码安装","depth":3,"value":"源码安装"},{"id":"使用-pyenv-安装","depth":3,"value":"使用 pyenv 安装"},{"id":"安装依赖的库文件","depth":4,"value":"安装依赖的库文件"},{"id":"安装-pyenv","depth":4,"value":"安装 pyenv"},{"id":"简单使用","depth":4,"value":"简单使用"},{"id":"使用Pyenv安装python","depth":4,"value":"使用Pyenv安装python"},{"id":"安装-pyspider","depth":2,"value":"安装 pyspider"}],"frontmatter":{"title":"在 CentOS 上部署 pyspider 爬虫项目","date":"2018-10-08","cover":null,"description":null,"categories":[null],"tags":["Python"]}},"previous":{"fields":{"slug":"/blogs/2019-01-26-巧用-webpack-loader-实现项目的定制化/"},"frontmatter":{"title":"巧用 webpack loader 实现项目的定制化"}},"next":{"fields":{"slug":"/blogs/2018-07-15-TypeScript学习笔记-在Webpack中配置TypeScript/"},"frontmatter":{"title":"TypeScript学习笔记-在Webpack中配置TypeScript","tags":["TypeScript"],"categories":[],"status":null}}},"pageContext":{"id":"23a1881a-4b13-5f29-bc5a-1c94ce4c92e9","previousPostId":"c78dc207-20e3-54bd-affc-a2a935bab2a3","nextPostId":"f3a7a13e-7910-5515-a997-a8f86f090b3b"}},
    "staticQueryHashes": ["2841359383"]}