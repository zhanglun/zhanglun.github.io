{"version":3,"file":"component---src-templates-categories-js-7fe7e84267b6c1ad1f7e.js","mappings":"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","sources":["webpack://zhanglun.github.io/./src/components/Article/ArticleItem.tsx","webpack://zhanglun.github.io/./src/components/Article/ArticleList.tsx","webpack://zhanglun.github.io/./src/images/a.png","webpack://zhanglun.github.io/./src/templates/categories.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nexport function ArticleItem({ post }: { post: any }) {\n  const title = post.frontmatter.title || post.fields.slug;\n  const frontmatter = post.frontmatter || {};\n\n  return (\n    <li>\n      <article\n        className=\"article-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <Link\n          to={post.fields.slug}\n          itemProp=\"url\"\n          className=\"article-item-title\"\n        >\n          <div className=\"article-item-header\">\n            <span className=\"article-item-category\">\n              {frontmatter.categories}\n            </span>\n            <div className=\"article-item-header__arrow\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                width=\"24\"\n                height=\"24\"\n                fill=\"none\"\n              >\n                <path\n                  stroke=\"currentColor\"\n                  strokeWidth=\"1.4\"\n                  d=\"M12 3v17M19 13l-7 7-7-7\"\n                />\n              </svg>\n            </div>\n          </div>\n          <span itemProp=\"headline\" className=\"article-item__text\">\n            {title}\n          </span>\n        </Link>\n        {/* <small>{post.frontmatter.date}</small> */}\n        {/* <section> */}\n        {/*  <p */}\n        {/*    dangerouslySetInnerHTML={{ */}\n        {/*      __html: post.frontmatter.description || post.excerpt, */}\n        {/*    }} */}\n        {/*    itemProp=\"description\" */}\n        {/*  /> */}\n        {/* </section> */}\n        {/* <footer> */}\n        {/*  <Link to={post.fields.slug} itemProp=\"url\" className=\"read-more\"> */}\n        {/*    READ MORE */}\n        {/*  </Link> */}\n        {/* </footer> */}\n      </article>\n    </li>\n  );\n}\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { ArticleItem } from './ArticleItem';\nimport './index.css';\n\nconst useDebounce = (fn: any, wait: number, immediate: boolean = false, dep = []) => {\n  const { current } = useRef({ fn, timer: null });\n  useEffect(() => {\n    current.fn = fn;\n  }, [fn]);\n\n  return useCallback((...args) => {\n    if (current.timer) {\n      clearTimeout(current.timer);\n    }\n\n    if (immediate && !current.timer) {\n      current.fn.call(this, ...args);\n    }\n\n    current.timer = setTimeout(() => {\n      current.fn.call(this, ...args);\n    }, wait);\n  }, dep);\n};\n\nexport function ArticleList({ posts }) {\n  const articleListRef = useRef(null);\n\n  const setTransformOffset = (elem: HTMLElement, offset: number) => {\n    const el = elem;\n    el.style.transform = `translate3d(-${offset}px, 0, 0)`;\n  };\n\n  const handleScroll = () => {\n    const yOffset = window.scrollY;\n    setTransformOffset(articleListRef.current, yOffset);\n  };\n\n  const delayScroll = useDebounce(handleScroll, 50);\n\n  useEffect(() => {\n    if (!articleListRef) {\n      return;\n    }\n\n    // const height = articleListRef.current.offsetWidth;\n    // document.body.style.height = `${height}px`;\n\n    // window.addEventListener('scroll', delayScroll);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      document.body.style.height = null;\n      window.removeEventListener('scroll', delayScroll);\n    };\n  }, []);\n\n  return (\n    <ul className=\"article-list\" ref={articleListRef}>\n      {posts.map((post) => <ArticleItem post={post} key={post.id} />)}\n    </ul>\n  );\n}\n","export default __webpack_public_path__ + \"static/a-58ae8bd9f697f22894f57726248e8768.png\";","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { ArticleList } from '../components/Article/ArticleList';\nimport A from '../images/a.png';\n\nfunction CategoryTempalte({ data, location, pageContext }) {\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\n  const siteMenu = data.site.siteMetadata?.menu || [];\n  const description = data.site.siteMetadata?.description || '';\n  const { category, count } = pageContext;\n  const { nodes: posts } = data.allMarkdownRemark;\n\n  console.log(pageContext);\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      menu={siteMenu}\n      description={description}\n    >\n      <Seo title=\"All posts\" />\n      <div className=\"category-page-header\">\n        <div className=\"category-item\">\n          {/* <div className=\"category-img\">\n            <img src={A} alt=\"\" />\n          </div> */}\n          <div>\n            #\n            {category.name || category}\n          </div>\n          <div>{count}</div>\n        </div>\n      </div>\n      <div className=\"category-page-body\">\n        <ArticleList posts={posts} />\n      </div>\n    </Layout>\n  );\n}\n\nexport default CategoryTempalte;\n\nexport const pageQuery = graphql`\n  query categoryQueryPage ($category: String) {\n    site {\n      siteMetadata {\n        title\n        description\n        menu {\n          id\n          name\n          url\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {frontmatter: {categories: {eq: $category }}}\n    ) {\n      nodes {\n        excerpt(truncate: true, pruneLength: 140)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          status\n          cover\n          categories\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["ArticleItem","post","title","frontmatter","fields","slug","React","className","itemScope","itemType","Link","to","itemProp","categories","xmlns","viewBox","width","height","fill","stroke","strokeWidth","d","ArticleList","posts","articleListRef","useRef","delayScroll","fn","wait","immediate","dep","current","timer","useEffect","useCallback","args","arguments","clearTimeout","call","_this","setTimeout","useDebounce","elem","offset","yOffset","window","scrollY","style","transform","el","document","body","removeEventListener","ref","map","key","id","data","location","pageContext","siteTitle","site","siteMetadata","siteMenu","menu","description","category","count","allMarkdownRemark","nodes","console","log","name"],"sourceRoot":""}