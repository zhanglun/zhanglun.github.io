<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>张小伦爱学习</title>
    <link>https://zhanglun.github.io/</link>
    <description>Recent content on 张小伦爱学习</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 23 Apr 2021 14:20:51 +0800</lastBuildDate>
    
	<atom:link href="https://zhanglun.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ParseInt()的迷幻行为</title>
      <link>https://zhanglun.github.io/post/2021/04/parseint%E7%9A%84%E8%BF%B7%E5%B9%BB%E8%A1%8C%E4%B8%BA/</link>
      <pubDate>Fri, 23 Apr 2021 14:20:51 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2021/04/parseint%E7%9A%84%E8%BF%B7%E5%B9%BB%E8%A1%8C%E4%B8%BA/</guid>
      <description>最近看到一片文章 Solving a Mystery Behavior of parseInt() in JavaScript，讲的是JavaScript中的parseInt()的一个奇怪现象。 parseInt()是</description>
    </item>
    
    <item>
      <title>关于JavaScript的随机数</title>
      <link>https://zhanglun.github.io/post/2020/12/%E5%85%B3%E4%BA%8Ejavascript%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/</link>
      <pubDate>Mon, 14 Dec 2020 15:29:41 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/12/%E5%85%B3%E4%BA%8Ejavascript%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/</guid>
      <description>最近正在实现一个动画特效，有一个非常简单的需求 请求获取到一个数组A之后，将数组的内容以动画弹窗的方式展示给用户，要求： 1. 每次弹窗出现的时间间</description>
    </item>
    
    <item>
      <title>如何在项目中接入single-spa</title>
      <link>https://zhanglun.github.io/post/2020/11/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%8E%A5%E5%85%A5single-spa/</link>
      <pubDate>Sat, 28 Nov 2020 20:27:18 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/11/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%8E%A5%E5%85%A5single-spa/</guid>
      <description>之前的文章single-spa源码解析-registerApplication和start中，对single-spa提供的两个关键方法的源码</description>
    </item>
    
    <item>
      <title>single-spa源码解析-registerApplication和start</title>
      <link>https://zhanglun.github.io/post/2020/11/single-spa%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-registerapplication%E5%92%8Cstart/</link>
      <pubDate>Sat, 21 Nov 2020 21:28:13 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/11/single-spa%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-registerapplication%E5%92%8Cstart/</guid>
      <description>首先将问题简化，假定主应用和子应用都已经准备好的情况下，针对应用的注册和启动这两个关键操作进行分析。 在主应用中只需要调用registerAp</description>
    </item>
    
    <item>
      <title>使用 single-spa 实现微前端</title>
      <link>https://zhanglun.github.io/post/2020/11/%E4%BD%BF%E7%94%A8-single-spa-%E5%AE%9E%E7%8E%B0%E5%BE%AE%E5%89%8D%E7%AB%AF/</link>
      <pubDate>Thu, 05 Nov 2020 11:16:48 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/11/%E4%BD%BF%E7%94%A8-single-spa-%E5%AE%9E%E7%8E%B0%E5%BE%AE%E5%89%8D%E7%AB%AF/</guid>
      <description>背景 随着组织架构调整，目前来车服租车团队已经有一段时间了。虽然主要业务工作还是B端系统的开发，但是租车业务因其业务特点以及一些历史原因，我面</description>
    </item>
    
    <item>
      <title>Zen Reborn 计划</title>
      <link>https://zhanglun.github.io/post/2020/09/zen-reborn-%E8%AE%A1%E5%88%92/</link>
      <pubDate>Sun, 20 Sep 2020 18:20:51 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/09/zen-reborn-%E8%AE%A1%E5%88%92/</guid>
      <description>背景 作为业务组件库，zen在多个租车B端系统中被广泛使用。 zen在提高租车B端的研发效率的同时，保证B端系统的UI和交互的一致性。 但是当初的</description>
    </item>
    
    <item>
      <title>在滴滴的这几年：基于 Node.js 的私有云 Web 管控系统</title>
      <link>https://zhanglun.github.io/post/2020/06/%E5%9C%A8%E6%BB%B4%E6%BB%B4%E7%9A%84%E8%BF%99%E5%87%A0%E5%B9%B4%E5%9F%BA%E4%BA%8E-node.js-%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91-web-%E7%AE%A1%E6%8E%A7%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 14 Jun 2020 20:20:01 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/06/%E5%9C%A8%E6%BB%B4%E6%BB%B4%E7%9A%84%E8%BF%99%E5%87%A0%E5%B9%B4%E5%9F%BA%E4%BA%8E-node.js-%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91-web-%E7%AE%A1%E6%8E%A7%E7%B3%BB%E7%BB%9F/</guid>
      <description>在大概18年上半年，有幸被抽调到一个FT，参与云平台私有云项目的开发中。这个项目是一个产品化的IaaS解决方案，为企业提供管理包括计算，网络</description>
    </item>
    
    <item>
      <title>在滴滴的这几年：组件库的设计和开发</title>
      <link>https://zhanglun.github.io/post/2020/05/%E5%9C%A8%E6%BB%B4%E6%BB%B4%E7%9A%84%E8%BF%99%E5%87%A0%E5%B9%B4%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%80%E5%8F%91/</link>
      <pubDate>Tue, 05 May 2020 11:14:37 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/05/%E5%9C%A8%E6%BB%B4%E6%BB%B4%E7%9A%84%E8%BF%99%E5%87%A0%E5%B9%B4%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%BC%80%E5%8F%91/</guid>
      <description>入职的时候团队加上老板就三个人，需要对接5+个公共服务团队，为公共服务开发控制台，每个团队两个控制台系统。在之前，有一些团队有一些正在运行的</description>
    </item>
    
    <item>
      <title>使用 CSS variables 实现主题色切换</title>
      <link>https://zhanglun.github.io/post/2020/03/%E4%BD%BF%E7%94%A8-css-variables-%E5%AE%9E%E7%8E%B0%E4%B8%BB%E9%A2%98%E8%89%B2%E5%88%87%E6%8D%A2/</link>
      <pubDate>Sat, 21 Mar 2020 10:33:56 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/03/%E4%BD%BF%E7%94%A8-css-variables-%E5%AE%9E%E7%8E%B0%E4%B8%BB%E9%A2%98%E8%89%B2%E5%88%87%E6%8D%A2/</guid>
      <description>最近在写自己的小项目时，想试试 CSS variables，于是便有了此文。 之前也使用过 Sass，Less 之类的预处理器。因为 node-sass 的安装和编译频繁出现</description>
    </item>
    
    <item>
      <title>为Promise增加abort方法</title>
      <link>https://zhanglun.github.io/post/2020/01/%E4%B8%BApromise%E5%A2%9E%E5%8A%A0abort%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 16 Jan 2020 19:50:24 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2020/01/%E4%B8%BApromise%E5%A2%9E%E5%8A%A0abort%E6%96%B9%E6%B3%95/</guid>
      <description>对于Promise而言只有三个状态： Pending， Resolve 和 Reject。在任意时刻，一个Promise只能是处于这三个状态中的任意一个，且一旦</description>
    </item>
    
    <item>
      <title>浅谈TreeShaking在前端中的应用 - Rollup VS Webpack</title>
      <link>https://zhanglun.github.io/post/2019/11/%E6%B5%85%E8%B0%88treeshaking%E5%9C%A8%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-rollup-vs-webpack/</link>
      <pubDate>Thu, 14 Nov 2019 21:50:12 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/11/%E6%B5%85%E8%B0%88treeshaking%E5%9C%A8%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-rollup-vs-webpack/</guid>
      <description>前言 Tree Shaking是一种死码清除(dead code elimination)技术，通常用于在ECMAScript方言比如Dart，JavaScri</description>
    </item>
    
    <item>
      <title>JavaScript异步编程方案回顾</title>
      <link>https://zhanglun.github.io/post/2019/10/javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E6%96%B9%E6%A1%88%E5%9B%9E%E9%A1%BE/</link>
      <pubDate>Wed, 09 Oct 2019 10:16:54 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/10/javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E6%96%B9%E6%A1%88%E5%9B%9E%E9%A1%BE/</guid>
      <description>如标题所述，本文主要是重新梳理JavaScript的异步编程方案，部分内容来自网络 同步 在开始之前，先简单说说JavaScript中的同步。先</description>
    </item>
    
    <item>
      <title>再谈EventLoop</title>
      <link>https://zhanglun.github.io/post/2019/08/%E5%86%8D%E8%B0%88eventloop/</link>
      <pubDate>Tue, 20 Aug 2019 16:56:04 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/08/%E5%86%8D%E8%B0%88eventloop/</guid>
      <description>首先明确一点，事件循环这个概念并非JavaScript语言中的。在计算机科学中，事件循环作为编程结构或者设计模式，在程序中等待和发送消息或者</description>
    </item>
    
    <item>
      <title>IntersectionObserver、MutationObserver和ResizeObserver</title>
      <link>https://zhanglun.github.io/post/2019/07/intersectionobservermutationobserver%E5%92%8Cresizeobserver/</link>
      <pubDate>Sat, 13 Jul 2019 22:31:06 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/07/intersectionobservermutationobserver%E5%92%8Cresizeobserver/</guid>
      <description>在之前的从getboundingclientrect到intersection-observer中提到了Intersection Observer API，今</description>
    </item>
    
    <item>
      <title>从getBoundingClientRect到Intersection Observer</title>
      <link>https://zhanglun.github.io/post/2019/05/%E4%BB%8Egetboundingclientrect%E5%88%B0intersection-observer/</link>
      <pubDate>Thu, 23 May 2019 20:54:17 +0800</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/05/%E4%BB%8Egetboundingclientrect%E5%88%B0intersection-observer/</guid>
      <description>平时在写页面交互的时候经常使用兼容性不错的 getBoundindClientReact 方法，以快速获取元素大小和元素位置。最近无意中看到getBoundingClientRect方法</description>
    </item>
    
    <item>
      <title>浅谈 HTTP 缓存</title>
      <link>https://zhanglun.github.io/post/2019/03/%E6%B5%85%E8%B0%88-http-%E7%BC%93%E5%AD%98/</link>
      <pubDate>Sat, 09 Mar 2019 15:41:38 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/03/%E6%B5%85%E8%B0%88-http-%E7%BC%93%E5%AD%98/</guid>
      <description>&lt;p&gt;说到缓存大家可能觉得很简单。“不就是检查资源是否有缓存，如果有就加以利用”，“可以节约服务器资源呗”。如果再深入一点，有的cache-control, last-modified, etag 之类的名词，但如果真的考究一下这些字段的细节，恐怕大多数人也说不清楚。遂做了一番整理，希望对大家有所帮助&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>巧用 webpack loader 实现项目的定制化</title>
      <link>https://zhanglun.github.io/post/2019/01/%E5%B7%A7%E7%94%A8-webpack-loader-%E5%AE%9E%E7%8E%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%AE%9A%E5%88%B6%E5%8C%96/</link>
      <pubDate>Sat, 26 Jan 2019 12:39:22 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2019/01/%E5%B7%A7%E7%94%A8-webpack-loader-%E5%AE%9E%E7%8E%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%AE%9A%E5%88%B6%E5%8C%96/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;有这样的需求：项目交付的版本要求支持针对客户定制产品的LOGO、登录界面的背景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 CentOS 上部署 pyspider 爬虫项目</title>
      <link>https://zhanglun.github.io/post/2018/10/%E5%9C%A8-centos-%E4%B8%8A%E9%83%A8%E7%BD%B2-pyspider-%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Mon, 08 Oct 2018 23:12:03 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2018/10/%E5%9C%A8-centos-%E4%B8%8A%E9%83%A8%E7%BD%B2-pyspider-%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;之前在腾讯云的云主机中，部署了一个pyspider爬虫项目，专门爬链家上的二手房信息。前段时间云主机被我玩坏了，重装了一次，需要重新在部署一次。之前没有记录下具体的过程，无奈只能搜索资料重来一次。乘着这次机会，在此记录下 CentOS 上 Pyspider 爬虫项目的部署过程。以后还是需要多做笔记，整理学习&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TypeScript学习笔记-在Webpack中配置TypeScript</title>
      <link>https://zhanglun.github.io/post/2018/07/typescript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9C%A8webpack%E4%B8%AD%E9%85%8D%E7%BD%AEtypescript/</link>
      <pubDate>Sun, 15 Jul 2018 11:26:49 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2018/07/typescript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9C%A8webpack%E4%B8%AD%E9%85%8D%E7%BD%AEtypescript/</guid>
      <description>&lt;p&gt;上篇说到TypeScript简单的基本知识，包括什么是TypeScript、TypeScript的安装以及TypeScript中的基本类型。今天来了解一下如何在Webpack中配置TypeScript。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TypeScript学习笔记-入门:安装与基础知识</title>
      <link>https://zhanglun.github.io/post/2018/07/typescript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 08 Jul 2018 21:08:03 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2018/07/typescript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;TypeScript 是由微软推出的开源编程语言，官网的定义如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. Any browser. Any host. Any OS. Open source.&lt;/p&gt;

&lt;p&gt;TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上。TypeScript 编译工具可以运行在任何服务器和任何系统上。TypeScript 是开源的。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>个人服务器常用基础配置</title>
      <link>https://zhanglun.github.io/post/2018/03/%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 09 Mar 2018 21:05:12 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2018/03/%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;买了一个服务器，系统是CentOS7.2 .做了一番基础设置，在此记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://zhanglun.github.io/about/</link>
      <pubDate>Fri, 26 Jan 2018 22:27:38 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/about/</guid>
      <description>联系方式 邮箱: zhanglun1410@gmail.com 个人信息 张伦/男/1994年 211本科/2015年毕业/南昌大学/网络工程 工作年限：5年 杭州/伪全栈开发工程师 个人博客：ht</description>
    </item>
    
    <item>
      <title>最近几次面试的小总结</title>
      <link>https://zhanglun.github.io/post/2017/02/%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 16 Feb 2017 20:23:13 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2017/02/%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;前几天离职了，离职前几天开始物色合适的下家。在疯狂的简历投递之后，陆续接到了几个面试邀请，已经面了四家。这四次面试风格迥异，期间遇到了一些比较有意思的问题，在此整理总结一番。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>整理Object的一些方法</title>
      <link>https://zhanglun.github.io/post/2017/01/%E6%95%B4%E7%90%86object%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 19 Jan 2017 19:32:31 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2017/01/%E6%95%B4%E7%90%86object%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;ES5 和 ES6 中 Object 添加了很多新的方法，现在很多开源代码中有用到了这些，今天来整理一番。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScrip模块系统详解</title>
      <link>https://zhanglun.github.io/post/2017/01/javascrip%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 11 Jan 2017 19:45:09 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2017/01/javascrip%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;在这几天的工作中，我需要调用同事编写的兼容jQuery和React的通用组件。他为了兼容jQuery风格的调用和React的组件化，分别export了一个default和几个方法函数。在调用的过程中，出现了一些小插曲：React代码和老的jQuery老代码调用时应该怎么正确的import？虽然是很低级的问题，但是引发了我一些思考：&lt;strong&gt;export 和 import 与 module.exports 和 exports 之间的关系&lt;/strong&gt;以及&lt;strong&gt;JavaScript模块系统的发展历程&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>深入理解 ES6 的解构赋值</title>
      <link>https://zhanglun.github.io/post/2017/01/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-es6-%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</link>
      <pubDate>Thu, 05 Jan 2017 20:23:35 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2017/01/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-es6-%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/</guid>
      <description>&lt;p&gt;解构赋值（destructuring assignment）语法是一个Javascript表达式，这种语法能够更方便的提取出 Object 或者 Array 中的数据。这种语法可以在接受提取的数据的地方使用，比如一个表达式的左边。有明确的语法模式来告诉我们如何使用这种语法提取需要的数据值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Firebase构建云端应用-数据库的管理</title>
      <link>https://zhanglun.github.io/post/2016/12/%E4%BD%BF%E7%94%A8firebase%E6%9E%84%E5%BB%BA%E4%BA%91%E7%AB%AF%E5%BA%94%E7%94%A8-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 24 Dec 2016 17:32:43 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/12/%E4%BD%BF%E7%94%A8firebase%E6%9E%84%E5%BB%BA%E4%BA%91%E7%AB%AF%E5%BA%94%E7%94%A8-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;上回讲到Firebase 的[创建项目和用户管理]()。今天来说说 Firebase 的数据库的使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Firebase构建云端应用:创建项目和用户管理</title>
      <link>https://zhanglun.github.io/post/2016/12/%E4%BD%BF%E7%94%A8firebase%E6%9E%84%E5%BB%BA%E4%BA%91%E7%AB%AF%E5%BA%94%E7%94%A8%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%92%8C%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 14 Dec 2016 21:06:12 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/12/%E4%BD%BF%E7%94%A8firebase%E6%9E%84%E5%BB%BA%E4%BA%91%E7%AB%AF%E5%BA%94%E7%94%A8%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%92%8C%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;在构建自己的在线云工具应用时，我使用 Firebase 为自己的“无后端项目”提供服务，把在开发期间接触到的一些内容整理在一起，制成系列笔记。这个过程有两个好处：巩固知识点，整理开发过程的思路。因为前端开发是自己所熟悉的领域，所以先从 Firebase 入手，将后端的一些知识点提前梳理理顺，避免后续的学习过程中的卡壳而导致无法坚持。今天第一期：创建项目和用户管理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[译]CSS Grid, Flexbox 和 Box Alignment:网页布局的新系统</title>
      <link>https://zhanglun.github.io/post/2016/11/%E8%AF%91css-grid-flexbox-%E5%92%8C-box-alignment%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80%E7%9A%84%E6%96%B0%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Fri, 11 Nov 2016 22:50:35 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/11/%E8%AF%91css-grid-flexbox-%E5%92%8C-box-alignment%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80%E7%9A%84%E6%96%B0%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文标题：CSS Grid, Flexbox And Box Alignment: Our New System For Web Layout&lt;br /&gt;
原文链接：&lt;a href=&#34;https://www.smashingmagazine.com/2016/11/css-grids-flexbox-and-box-alignment-our-new-system-for-web-layout/&#34;&gt;https://www.smashingmagazine.com/2016/11/css-grids-flexbox-and-box-alignment-our-new-system-for-web-layout/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>使用 React-Router 创建单页应用</title>
      <link>https://zhanglun.github.io/post/2016/10/%E4%BD%BF%E7%94%A8-react-router-%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 30 Oct 2016 10:55:34 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/10/%E4%BD%BF%E7%94%A8-react-router-%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8/</guid>
      <description>&lt;p&gt;最近业余时间在学习 React，配合 Redux 和 React-Router 正在不紧不慢地开发一个小工具&lt;a href=&#34;https://github.com/zhanglun/moviemaster&#34;&gt;moviemaster&lt;/a&gt;，用于管理硬盘中的电影剧集。在单页应用开发中，redux 并不是必须的，所以今天只讲讲 前端的路由系统以及 React-Router的简单使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>实现一个稍微复杂的simplelist</title>
      <link>https://zhanglun.github.io/post/2016/09/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%A8%8D%E5%BE%AE%E5%A4%8D%E6%9D%82%E7%9A%84simplelist/</link>
      <pubDate>Sun, 25 Sep 2016 18:40:45 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/09/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%A8%8D%E5%BE%AE%E5%A4%8D%E6%9D%82%E7%9A%84simplelist/</guid>
      <description>&lt;p&gt;使用过一些清单类的应用程序，像 WunderList, Google Keep等，用来记录一些计划和安排，也试着将自己的计划安排同笔记一起整理在 Evernote 中，但是无论哪种方式用起来总觉得少了点什么，如果两者的一些功能能够结合起来，就很完美了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>输入框插入表情的实现</title>
      <link>https://zhanglun.github.io/post/2016/08/%E8%BE%93%E5%85%A5%E6%A1%86%E6%8F%92%E5%85%A5%E8%A1%A8%E6%83%85%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sat, 13 Aug 2016 14:50:06 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/08/%E8%BE%93%E5%85%A5%E6%A1%86%E6%8F%92%E5%85%A5%E8%A1%A8%E6%83%85%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;在普通的 textarea 中，只能显示普通的文本。如果简单的输入文本，textarea 便足以胜任。但是实际情况往往要复杂得多。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Electron 开发的 gulp 配置</title>
      <link>https://zhanglun.github.io/post/2016/08/electron-%E5%BC%80%E5%8F%91%E7%9A%84-gulp-%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 05 Aug 2016 16:30:38 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/08/electron-%E5%BC%80%E5%8F%91%E7%9A%84-gulp-%E9%85%8D%E7%BD%AE/</guid>
      <description>源自 Atom-shell 的 Electron 目前是一个很火的项目。已经有很多开发者基于 Electron 开发出了各种各样的桌面程序。在我看来，对于广大前端开发者来说，最为耳熟能详的应该是 Atom 和</description>
    </item>
    
    <item>
      <title>真的是好久没写博客了</title>
      <link>https://zhanglun.github.io/post/2016/08/%E7%9C%9F%E7%9A%84%E6%98%AF%E5%A5%BD%E4%B9%85%E6%B2%A1%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86/</link>
      <pubDate>Thu, 04 Aug 2016 14:53:02 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/08/%E7%9C%9F%E7%9A%84%E6%98%AF%E5%A5%BD%E4%B9%85%E6%B2%A1%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86/</guid>
      <description>&lt;p&gt;记录可查，自从毕业之后就没怎么写过博客。期间写了翻译了两篇老外的文章，不过好像似乎也是烂尾了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chrome内存分析工具概述</title>
      <link>https://zhanglun.github.io/post/2016/04/chrome%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 10 Apr 2016 18:00:18 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2016/04/chrome%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E6%A6%82%E8%BF%B0/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文标题：4 Types of Memory Leaks in JavaScript and How to Get Rid Of Them
原文链接：&lt;a href=&#34;https://auth0.com/blog/2016/01/26/four-types-of-leaks-in-your-javascript-code-and-how-to-get-rid-of-them/&#34;&gt;https://auth0.com/blog/2016/01/26/four-types-of-leaks-in-your-javascript-code-and-how-to-get-rid-of-them/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>实验室</title>
      <link>https://zhanglun.github.io/labs/</link>
      <pubDate>Mon, 23 Nov 2015 22:30:11 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/labs/</guid>
      <description>bluerobin 基于 Vuex 仿 WunderList 的简单 todo 工具，支持 markdown。正在不断完善中&amp;hellip; 项目地址：bluerobin 预览：bluerobin movismaster 一款基于</description>
    </item>
    
    <item>
      <title>规范之路-line-height的工作原理</title>
      <link>https://zhanglun.github.io/post/2014/11/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-line-height%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 20 Nov 2014 11:45:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/11/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-line-height%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;有人问我，“line-height到底是怎么一回事？”，“元素高度到底是怎么计算出来的？”。我说不出个所以然……&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;故有此文&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>定时将图片保存在SAE的Storage中</title>
      <link>https://zhanglun.github.io/post/2014/11/%E5%AE%9A%E6%97%B6%E5%B0%86%E5%9B%BE%E7%89%87%E4%BF%9D%E5%AD%98%E5%9C%A8sae%E7%9A%84storage%E4%B8%AD/</link>
      <pubDate>Mon, 10 Nov 2014 19:27:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/11/%E5%AE%9A%E6%97%B6%E5%B0%86%E5%9B%BE%E7%89%87%E4%BF%9D%E5%AD%98%E5%9C%A8sae%E7%9A%84storage%E4%B8%AD/</guid>
      <description>前几天一直在看Node相关的书，做了一些笔记，挂在自己的博客上。挺累的，毕竟看的是两本英文的书。而且疲了，一时间学的太猛，以至于晕头转向的。</description>
    </item>
    
    <item>
      <title>Node学习笔记-Wrangling the File System</title>
      <link>https://zhanglun.github.io/post/2014/11/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-wrangling-the-file-system/</link>
      <pubDate>Fri, 07 Nov 2014 17:29:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/11/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-wrangling-the-file-system/</guid>
      <description>在开发过程中，有时候会需要访问一些本地的文件，对文件进行一些操作。现在来对这方面的问题展开学习。下面是几个简单的例子，包括监听文件的变化和读</description>
    </item>
    
    <item>
      <title>Node学习笔记-Data Sources and Flow Control</title>
      <link>https://zhanglun.github.io/post/2014/11/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-data-sources-and-flow-control/</link>
      <pubDate>Thu, 06 Nov 2014 21:17:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/11/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-data-sources-and-flow-control/</guid>
      <description>额在之前的笔记中，提到了使用middleware，设置路由，发送数据，处理请求，渲染模板等。但是这些都不足以完成一个Web应用程序，动态数据</description>
    </item>
    
    <item>
      <title>Node学习笔记-Server-Side Templates</title>
      <link>https://zhanglun.github.io/post/2014/11/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-server-side-templates/</link>
      <pubDate>Mon, 03 Nov 2014 13:39:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/11/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-server-side-templates/</guid>
      <description>因为各种版本的更新，文中的例子可能失效无法运行。毕竟Node for Front-End Developer这本书已经出现很久了。 Creating a Dynamic Page 不像其他的服务端语言开发，N</description>
    </item>
    
    <item>
      <title>Node学习笔记-Serving the content</title>
      <link>https://zhanglun.github.io/post/2014/10/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-serving-the-content/</link>
      <pubDate>Tue, 28 Oct 2014 19:40:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/10/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-serving-the-content/</guid>
      <description>Node中的MiddleWare In the context of a web server, middleware is a layer between the guts of the server and the code you’re writing to run on it that provides a set of abstractions anyone writing code for the platform will be likely to need. It differs from other modules you</description>
    </item>
    
    <item>
      <title>规范之路-重新认识了Float</title>
      <link>https://zhanglun.github.io/post/2014/10/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86%E4%BA%86float/</link>
      <pubDate>Wed, 15 Oct 2014 14:50:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/10/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86%E4%BA%86float/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;总是喜欢在阴雨绵绵的时候收拾自己的小窝，无论是在家还是在学校。也不知道这个癖好是怎么形成的，还是不错的。这几天一直在搞一个新的hexo的主题，暂时没什么进展了，想到之前坚持撸标准的事情已经搁置了好久，今天收拾完就重新开始吧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;今天看的是 &lt;a href=&#34;http://www.w3.org/TR/CSS21/visuren.html#floats&#34;&gt;Floats&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的响应式web开发实践笔记-Media Queries 初探</title>
      <link>https://zhanglun.github.io/post/2014/10/%E6%88%91%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8Fweb%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0-media-queries-%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Fri, 10 Oct 2014 12:30:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/10/%E6%88%91%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8Fweb%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0-media-queries-%E5%88%9D%E6%8E%A2/</guid>
      <description>很久以前就接触到了响应式Web开发这回事，自己也玩弄过一阵。当时没有整理成笔记，现在在重构自己的在线简历以及hexo主题制作过程中涉及到，就</description>
    </item>
    
    <item>
      <title>使用python抓取知乎日报的API数据</title>
      <link>https://zhanglun.github.io/post/2014/10/%E4%BD%BF%E7%94%A8python%E6%8A%93%E5%8F%96%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5%E7%9A%84api%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 08 Oct 2014 20:12:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/10/%E4%BD%BF%E7%94%A8python%E6%8A%93%E5%8F%96%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5%E7%9A%84api%E6%95%B0%E6%8D%AE/</guid>
      <description>使用 urllib2 抓取数据时，最简单的方法是： 1 2 3 4 5 6 import urllib2, json def getStartImage(): stream = urllib2.urlopen(&amp;#39;http://news-at.zhihu.com/api/3/start-image/1080*1776&amp;#39;) start_image = json.load(stream) start_image = json.dumps(start_image, encoding=&amp;#39;utf-8&amp;#39;) return start_image 使用urllib2.urlopen打开参数中给出的url，返</description>
    </item>
    
    <item>
      <title>CSS的盒模型-过去和将来</title>
      <link>https://zhanglun.github.io/post/2014/10/css%E7%9A%84%E7%9B%92%E6%A8%A1%E5%9E%8B-%E8%BF%87%E5%8E%BB%E5%92%8C%E5%B0%86%E6%9D%A5/</link>
      <pubDate>Sun, 05 Oct 2014 14:30:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/10/css%E7%9A%84%E7%9B%92%E6%A8%A1%E5%9E%8B-%E8%BF%87%E5%8E%BB%E5%92%8C%E5%B0%86%E6%9D%A5/</guid>
      <description>CSS 诞生已经二十年了，我接触 CSS 才两年。不说多么的精通，但是自信对基本的常用的 CSS 很熟悉。然而，一直往前赶却忽略了事情的本质。昨天有人问我盒模型，</description>
    </item>
    
    <item>
      <title>规范之路-Normal Flow</title>
      <link>https://zhanglun.github.io/post/2014/10/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-normal-flow/</link>
      <pubDate>Thu, 02 Oct 2014 20:39:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/10/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-normal-flow/</guid>
      <description>##Normal Flow 在正常流中的盒子们都是一个格式化上下文（formatting context）中的成员，可以表现成一个block或者inline，但是不能</description>
    </item>
    
    <item>
      <title>CSS元素居中对齐大法</title>
      <link>https://zhanglun.github.io/post/2014/09/css%E5%85%83%E7%B4%A0%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90%E5%A4%A7%E6%B3%95/</link>
      <pubDate>Tue, 30 Sep 2014 20:34:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/09/css%E5%85%83%E7%B4%A0%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90%E5%A4%A7%E6%B3%95/</guid>
      <description>原文标题：Centering in CSS: A Complete Guide 原文链接：http://css-tricks.com/centering-css-complete-g</description>
    </item>
    
    <item>
      <title>CSS 中的权重问题</title>
      <link>https://zhanglun.github.io/post/2014/09/css-%E4%B8%AD%E7%9A%84%E6%9D%83%E9%87%8D%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 26 Sep 2014 12:23:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/09/css-%E4%B8%AD%E7%9A%84%E6%9D%83%E9%87%8D%E9%97%AE%E9%A2%98/</guid>
      <description>自己对以后的方向很明确，但是却一直做不到。接连的 rejected 多少对自己有影响。不是自己不去争取，而是真的已经疲了，或者说自己也怂了。面试的时候已经不知</description>
    </item>
    
    <item>
      <title>Git 使用笔记(三)-分支的使用</title>
      <link>https://zhanglun.github.io/post/2014/09/git-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E4%B8%89-%E5%88%86%E6%94%AF%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 14 Sep 2014 16:06:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/09/git-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E4%B8%89-%E5%88%86%E6%94%AF%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>简单介绍 之前说过，每次修改之后，Git 并不是保存这些修改之后的差异变化，实际上就像一个照相机一样，将修改后的文件拍下作为文件快照，记录在一个</description>
    </item>
    
    <item>
      <title>规范之路-CSS中的定位简介</title>
      <link>https://zhanglun.github.io/post/2014/09/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-css%E4%B8%AD%E7%9A%84%E5%AE%9A%E4%BD%8D%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 12 Sep 2014 20:30:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/09/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-css%E4%B8%AD%E7%9A%84%E5%AE%9A%E4%BD%8D%E7%AE%80%E4%BB%8B/</guid>
      <description>在 CSS2.1 中，一个盒子会根据下面三种定位方案进行排列： 标准流（Normal flow）：在 CSS2.1 中包括 块级盒子形成的块级格式化上下文（block formatting con</description>
    </item>
    
    <item>
      <title>如何将页面的footer保持在页面的底部一</title>
      <link>https://zhanglun.github.io/post/2014/08/%E5%A6%82%E4%BD%95%E5%B0%86%E9%A1%B5%E9%9D%A2%E7%9A%84footer%E4%BF%9D%E6%8C%81%E5%9C%A8%E9%A1%B5%E9%9D%A2%E7%9A%84%E5%BA%95%E9%83%A8%E4%B8%80/</link>
      <pubDate>Mon, 25 Aug 2014 22:25:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/08/%E5%A6%82%E4%BD%95%E5%B0%86%E9%A1%B5%E9%9D%A2%E7%9A%84footer%E4%BF%9D%E6%8C%81%E5%9C%A8%E9%A1%B5%E9%9D%A2%E7%9A%84%E5%BA%95%E9%83%A8%E4%B8%80/</guid>
      <description>我敢说这一定是很常见的问题，因为到处都是页面不够长而上吊的footer，而。比如这里： 或者这里(￣◇￣;)： 这是随手找到，没别的意思。只是想</description>
    </item>
    
    <item>
      <title>规范之路-visual formatting model 概述</title>
      <link>https://zhanglun.github.io/post/2014/08/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-visual-formatting-model-%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Thu, 21 Aug 2014 20:39:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/08/%E8%A7%84%E8%8C%83%E4%B9%8B%E8%B7%AF-visual-formatting-model-%E6%A6%82%E8%BF%B0/</guid>
      <description>视觉格式化模型 CSS 视觉格式化模型（visual formatting model）是一种用来处理文档，将其呈现在可视化媒体中的算法。这是 CSS 中的一个最基本的概念。可视</description>
    </item>
    
    <item>
      <title>踩坑日记-IE中的 hasLayout 属性</title>
      <link>https://zhanglun.github.io/post/2014/08/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0-ie%E4%B8%AD%E7%9A%84-haslayout-%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Tue, 12 Aug 2014 13:26:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/08/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0-ie%E4%B8%AD%E7%9A%84-haslayout-%E5%B1%9E%E6%80%A7/</guid>
      <description>原文链接：http://www.sitepoint.com/web-foundations/internet-explorer-haslay</description>
    </item>
    
    <item>
      <title>Grunt的简单配置和使用</title>
      <link>https://zhanglun.github.io/post/2014/08/grunt%E7%9A%84%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 08 Aug 2014 21:09:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/08/grunt%E7%9A%84%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>Grunt 和 Grunt 的插件都是通过 Node.js 的包管理器 npm 来安装和管理的。为了方便使用 Grunt ，你应该在全局范围内安装 Grunt 的命令行接口(CLI)。要做到这一点，你可能需要使</description>
    </item>
    
    <item>
      <title>git 使用笔记(二)-撤销操作</title>
      <link>https://zhanglun.github.io/post/2014/07/git-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E4%BA%8C-%E6%92%A4%E9%94%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 22 Jul 2014 21:09:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/07/git-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E4%BA%8C-%E6%92%A4%E9%94%80%E6%93%8D%E4%BD%9C/</guid>
      <description>在最近使用 git 的过程中，有时候遇到这样的一个问题：习惯性的 &amp;ldquo;add -A&amp;rdquo;，这会将所有的修改都添加到暂存区，可是有两个文件的修改暂时不想添</description>
    </item>
    
    <item>
      <title>踩坑日记-IE下 A 标签的虚线框和必须要会用的 CSS 选择器</title>
      <link>https://zhanglun.github.io/post/2014/07/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0-ie%E4%B8%8B-a-%E6%A0%87%E7%AD%BE%E7%9A%84%E8%99%9A%E7%BA%BF%E6%A1%86%E5%92%8C%E5%BF%85%E9%A1%BB%E8%A6%81%E4%BC%9A%E7%94%A8%E7%9A%84-css-%E9%80%89%E6%8B%A9%E5%99%A8/</link>
      <pubDate>Fri, 18 Jul 2014 20:39:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/07/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0-ie%E4%B8%8B-a-%E6%A0%87%E7%AD%BE%E7%9A%84%E8%99%9A%E7%BA%BF%E6%A1%86%E5%92%8C%E5%BF%85%E9%A1%BB%E8%A6%81%E4%BC%9A%E7%94%A8%E7%9A%84-css-%E9%80%89%E6%8B%A9%E5%99%A8/</guid>
      <description>###IE 下 a标签的虚线框 在 IE 中，点击 a 标签时， a 标签会被加上一个虚线框，很丑！！！！！ 不同版本的IE解决方案不同：IE8 下只需为 a 标签添加一条 CSS 属</description>
    </item>
    
    <item>
      <title>Git 使用笔记(一)-入门级的操作</title>
      <link>https://zhanglun.github.io/post/2014/07/git-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E4%B8%80-%E5%85%A5%E9%97%A8%E7%BA%A7%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 16 Jul 2014 21:09:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/07/git-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0%E4%B8%80-%E5%85%A5%E9%97%A8%E7%BA%A7%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>一般处理 初始化: 1 $ git init 这样就会在当前目录创建版本库. 常用指令: 添加文件： 1 $ git add FILENAME 删除文件索引,并且删除文件： 1 $ git rm FILENAME 重命名： 1 $ git mv OLDFILENAME</description>
    </item>
    
    <item>
      <title>利用pip安装Django</title>
      <link>https://zhanglun.github.io/post/2014/07/%E5%88%A9%E7%94%A8pip%E5%AE%89%E8%A3%85django/</link>
      <pubDate>Sat, 12 Jul 2014 20:30:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/07/%E5%88%A9%E7%94%A8pip%E5%AE%89%E8%A3%85django/</guid>
      <description>###pip的安装 先下载一个 python 文件 : get-pip.py。 然后运行下面这条命令（可能需要管理员权限）： 1 python get-pip.py 如果 setuptools 还没有安装，pip会帮你安</description>
    </item>
    
    <item>
      <title>(译)阻止事件传播的危害</title>
      <link>https://zhanglun.github.io/post/2014/05/%E8%AF%91%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E4%BC%A0%E6%92%AD%E7%9A%84%E5%8D%B1%E5%AE%B3/</link>
      <pubDate>Wed, 28 May 2014 21:23:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/05/%E8%AF%91%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E4%BC%A0%E6%92%AD%E7%9A%84%E5%8D%B1%E5%AE%B3/</guid>
      <description>原文标题：The Dangers of Stopping Event Propagation 原文链接：http://css-tricks.com/dangers-stopping-event-propaga</description>
    </item>
    
    <item>
      <title>Node学习笔记—Node.js核心API之Util</title>
      <link>https://zhanglun.github.io/post/2014/05/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0node.js%E6%A0%B8%E5%BF%83api%E4%B9%8Butil/</link>
      <pubDate>Thu, 15 May 2014 21:16:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/05/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0node.js%E6%A0%B8%E5%BF%83api%E4%B9%8Butil/</guid>
      <description>&lt;p&gt;最近正在学习Node，在图书馆借了基本关于Node的书，同时在网上查阅资料，颇有收获，但是整体感觉对Node的理解还是停留在一个很模棱两可的状态。比如Node中的模块，平时练习就接触到那么几个，其他的一些模块暂时只会在学习的时候接触到，不常用便就荒废了。正所谓好记心不如烂笔头，多做笔记还是更有利于理解和记忆。自己做的总结也方便回头复习，所以决定踏上漫长的修炼之旅……&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node学习笔记-Node.js中的核心API之HTTP</title>
      <link>https://zhanglun.github.io/post/2014/05/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-node.js%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83api%E4%B9%8Bhttp/</link>
      <pubDate>Tue, 13 May 2014 17:36:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/05/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-node.js%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83api%E4%B9%8Bhttp/</guid>
      <description>&lt;p&gt;最近正在学习Node，在图书馆借了基本关于Node的书，同时在网上查阅资料，颇有收获，但是整体感觉对Node的理解还是停留在一个很模棱两可的状态。比如Node中的模块，平时练习就接触到那么几个，其他的一些模块暂时只会在学习的时候接触到，不常用便就荒废了。正所谓好记心不如烂笔头，多做笔记还是更有利于理解和记忆。自己做的总结也方便回头复习，所以决定踏上漫长的修炼之旅……&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node学习笔记-Nodejs中的核心API之Events</title>
      <link>https://zhanglun.github.io/post/2014/05/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-nodejs%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83api%E4%B9%8Bevents/</link>
      <pubDate>Mon, 12 May 2014 19:40:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/05/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-nodejs%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83api%E4%B9%8Bevents/</guid>
      <description>&lt;p&gt;最近正在学习Node，在图书馆借了基本关于Node的书，同时在网上查阅资料，颇有收获，但是整体感觉对Node的理解还是停留在一个很模棱两可的状态。比如Node中的模块，平时练习就接触到那么几个，其他的一些模块暂时只会在学习的时候接触到，不常用便就荒废了。正所谓好记心不如烂笔头，多做笔记还是更有利于理解和记忆。自己做的总结也方便回头复习，所以决定踏上漫长的修炼之旅……&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习sass时了解到的一些好玩特性</title>
      <link>https://zhanglun.github.io/post/2014/05/%E5%AD%A6%E4%B9%A0sass%E6%97%B6%E4%BA%86%E8%A7%A3%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 08 May 2014 21:34:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/05/%E5%AD%A6%E4%B9%A0sass%E6%97%B6%E4%BA%86%E8%A7%A3%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%89%B9%E6%80%A7/</guid>
      <description>&lt;p&gt;很久很久以前，我根据网上的博文总结写了一篇博客&lt;a href=&#34;http://zhanglun.github.io/2014/03/10/sass%E8%AF%AD%E6%B3%95/&#34;&gt;《sass基本语法》&lt;/a&gt;。在那之后平时虽然不太用到sass（因为没项目做，只能自己写着玩玩），但是也还一直在试着使用sass，提高熟练度。现在写写在学习过程中的总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(译)Node.js的 EventEmitter 教程</title>
      <link>https://zhanglun.github.io/post/2014/05/%E8%AF%91node.js%E7%9A%84-eventemitter-%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 05 May 2014 21:23:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/05/%E8%AF%91node.js%E7%9A%84-eventemitter-%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文标题：Node.js EventEmitter Tutorial&lt;br /&gt;
 原文链接：&lt;a href=&#34;http://www.hacksparrow.com/node-js-eventemitter-tutorial.html&#34;&gt;http://www.hacksparrow.com/node-js-eventemitter-tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>(译)Node.js的全局变量</title>
      <link>https://zhanglun.github.io/post/2014/04/%E8%AF%91node.js%E7%9A%84%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/</link>
      <pubDate>Mon, 28 Apr 2014 19:36:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/%E8%AF%91node.js%E7%9A%84%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文标题：Global Variables in Node.js&lt;br /&gt;
 原文链接：&lt;a href=&#34;http://www.hacksparrow.com/global-variables-in-node-js.html&#34;&gt;http://www.hacksparrow.com/global-variables-in-node-js.html
&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>(译)Node.js的模块-exports和module.exports</title>
      <link>https://zhanglun.github.io/post/2014/04/%E8%AF%91node.js%E7%9A%84%E6%A8%A1%E5%9D%97-exports%E5%92%8Cmodule.exports/</link>
      <pubDate>Sat, 26 Apr 2014 19:45:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/%E8%AF%91node.js%E7%9A%84%E6%A8%A1%E5%9D%97-exports%E5%92%8Cmodule.exports/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原文标题：Node.js Module – exports vs module.exports&lt;br /&gt;
 原文链接：&lt;a href=&#34;http://www.hacksparrow.com/node-js-exports-vs-module-exports.html&#34;&gt;http://www.hacksparrow.com/node-js-exports-vs-module-exports.html
&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Node学习笔记-Node.js中的模块</title>
      <link>https://zhanglun.github.io/post/2014/04/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-node.js%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Fri, 25 Apr 2014 19:40:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-node.js%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;之前简单的了解了 Node.js 。对 Node.js  有一个简单的认识。接下来查看了 API 文档中模块有关的知识点，参照《Node.js 开发指南》，并做笔记。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node.js入门-Node.js 介绍</title>
      <link>https://zhanglun.github.io/post/2014/04/node.js%E5%85%A5%E9%97%A8-node.js-%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 19 Apr 2014 21:55:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/node.js%E5%85%A5%E9%97%A8-node.js-%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;p&gt;Node.js学习入门&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>高性能网站优化-确保异步加载脚本时保持执行顺序</title>
      <link>https://zhanglun.github.io/post/2014/04/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96-%E7%A1%AE%E4%BF%9D%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E8%84%9A%E6%9C%AC%E6%97%B6%E4%BF%9D%E6%8C%81%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Thu, 10 Apr 2014 19:40:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96-%E7%A1%AE%E4%BF%9D%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E8%84%9A%E6%9C%AC%E6%97%B6%E4%BF%9D%E6%8C%81%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《高性能网站建设进阶指南》&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Hello hexo</title>
      <link>https://zhanglun.github.io/post/2014/04/hello-hexo/</link>
      <pubDate>Thu, 10 Apr 2014 14:32:44 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/hello-hexo/</guid>
      <description>&lt;p&gt;敬以此文纪念成功折腾出自己的github page&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScript中的事件处理程序</title>
      <link>https://zhanglun.github.io/post/2014/04/javascript%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sun, 06 Apr 2014 19:40:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/04/javascript%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;JavaScript和HTML之间的交互是通过事件实现的。事件，就是文档或者浏览器窗口中发生的一些特定的交互瞬间。可以使用事件处理程序来预订事件，以便在事件发生的时候执行响应的代码。这种观察者模式的模型，使得JavaScript代码与HTML和CSS代码之间形成了松散耦合。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>高性能网站优化-无阻塞加载脚本</title>
      <link>https://zhanglun.github.io/post/2014/03/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96-%E6%97%A0%E9%98%BB%E5%A1%9E%E5%8A%A0%E8%BD%BD%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Sun, 30 Mar 2014 19:40:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/03/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96-%E6%97%A0%E9%98%BB%E5%A1%9E%E5%8A%A0%E8%BD%BD%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《高性能网站建设进阶指南》&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>高性能网站优化-创建快速响应的Web</title>
      <link>https://zhanglun.github.io/post/2014/03/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96-%E5%88%9B%E5%BB%BA%E5%BF%AB%E9%80%9F%E5%93%8D%E5%BA%94%E7%9A%84web/</link>
      <pubDate>Sat, 15 Mar 2014 21:55:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/03/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96-%E5%88%9B%E5%BB%BA%E5%BF%AB%E9%80%9F%E5%93%8D%E5%BA%94%E7%9A%84web/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《高性能网站建设进阶指南》&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Sass基本语法</title>
      <link>https://zhanglun.github.io/post/2014/03/sass%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 10 Mar 2014 20:20:34 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/2014/03/sass%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>&lt;p&gt;sass是一种基于ruby语言开发的CSS预处理器。它可以使用变量，嵌套，混入，继承，运算，函数等编程语言具有的特性进行CSS的开发，使得CSS的开发变得简单粗暴清晰可维护。&lt;br /&gt;
sass有两种后缀文件格式：一种是sass后缀形式；一种是scss后缀形式。我选择的后缀是scss&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhanglun.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhanglun.github.io/top/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/top/about/</guid>
      <description>Huabing Zhao is an ICT veteran with a passion for open source. He has a solid experience in the telecommunication and information technology industry for more than 17 years.
Throughout his career, he has built a number of large-scale, cross-country OSS/BSS platforms/systems and operation tools, most of them are still running in productions.
He loves open source and has been contributing to a variety of open source projects, including Istio(Service Mesh https://istio.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhanglun.github.io/top/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/top/books/</guid>
      <description>Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记 讲师: 吴恩达(Andrew Ng)  课程地址：https://www.coursera.org/learn/machine-learning</description>
    </item>
    
    <item>
      <title>CSS 布局的未来：网格布局</title>
      <link>https://zhanglun.github.io/post/1/01/css-%E5%B8%83%E5%B1%80%E7%9A%84%E6%9C%AA%E6%9D%A5%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/1/01/css-%E5%B8%83%E5%B1%80%E7%9A%84%E6%9C%AA%E6%9D%A5%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80/</guid>
      <description>&lt;p&gt;原文链接： &lt;a href=&#34;https://medium.com/@patrickbrosset/css-grid-layout-6c9cba6e8a5a#.cz5qhhi87&#34;&gt;The future of layout with CSS: Grid Layouts&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScript 中不使用 new 的构造函数（以及由此引发的联想）</title>
      <link>https://zhanglun.github.io/post/1/01/javascript-%E4%B8%AD%E4%B8%8D%E4%BD%BF%E7%94%A8-new-%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E7%94%B1%E6%AD%A4%E5%BC%95%E5%8F%91%E7%9A%84%E8%81%94%E6%83%B3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhanglun.github.io/post/1/01/javascript-%E4%B8%AD%E4%B8%8D%E4%BD%BF%E7%94%A8-new-%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%BB%A5%E5%8F%8A%E7%94%B1%E6%AD%A4%E5%BC%95%E5%8F%91%E7%9A%84%E8%81%94%E6%83%B3/</guid>
      <description>前戏 在JavaScript 中，调用构造函数的方法很简单。 1 2 3 4 5 6 7 8 9 10 function Point(x, y){ this.x = x; this.y = y; } // 调用Point构造函数 // 使用new 关键字 var</description>
    </item>
    
  </channel>
</rss>